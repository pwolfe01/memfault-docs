{
    "openapi": "3.0.0",
    "info": {
        "title": "Memfault API Documentation",
        "description": "# Memfault URL's\n\nThere are three URL's that will be used with Memfault's service. The proper use will be documented below for each route.\n\n- `api.memfault.com` - Used along with an API Key for normal consumption and use of the API documented below\n- `ingress.memfault.com` - Use with API's that push data into Memfault, such as **Events** and *Coredumps*.\n- `app.memfault.com` - The Memfault Dashboard. Only for browser access.\n\n\n# Authentication\n\nThere are three ways to authenticate when interfacing with the Memfault API.\n\n\n## Email + Password\n\nTo test if the Email + Password works, one can try this example request\n\n```\ncurl --user user@example.com:mypassword https://api.memfault.com/api/v0/me\n```\n\nwhere `user@example.com` is the User's email and `mypassword` is the User's *password*\n\n\n## Email + API Key\n\nPlease refer to the section 'Auth â†’ Generate User API Key' to learn how to get an API key.\nOnce one is generated, the user can authenticate with the email + API key combination using\nBasic Auth\n\nTo test if the Email + API Key works, one can try this example request\n\n```\ncurl --user user@example.com:123e4567e89b12d3a456426655440000 https://api.memfault.com/api/v0/me\n```\nwhere `user@example.com` is the User's email and `123e4567e89b12d3a456426655440000` is the User's *API Key*\n\n\n## Memfault Project Key\n\nThis is only for use when pushing data into Memfault, or by a **Device** that may have limited memory when accessing specific endpoints (such as the Latest Release endpoint).\n\n> This sort of authentication **will not** work with most API endpoints. API endpoints that accept or require this form of authentication will explicitly say so in their specific documentation.\n\nThis enables **Devices** to associate directly to a **Project** instead of with a particular *User*, Memfault account, or API Key. It also allows for a shorter URL which doesn't have to specify the **Project** or **Organization**. **Devices** can make requests such as:\n\n```\ncurl \\\n  https://ingress.memfault.com/api/v0/events\n  -H \"Memfault-Project-Key: 06e7916f2db44167a1f5196cfe83a898\"\n  -H 'Content-Type: application/json' \\\n  -d '{ ... }'\n```\n\nThe Memfault Project Key for a **Project** can be found in the Dashboard under *Settings*. \n\n# Requests\n\nAll API data sent and received is [JSON](https://en.wikipedia.org/wiki/JSON).\n\n\n## Methods\n\n| Method   | Example Route   | Count  | Description                              |\n|:---------|:----------------|:-------|:-----------------------------------------|\n| `GET`    | `/objects`      | many   | Get a list of the objects                |\n| `GET`    | `/objects/:key` | single | Get a single object                      |\n| `POST`   | `/objects`      | single | Create a single object                   |\n| `PATCH`  | `/objects/:key` | single | Update any number of fields in an object |\n| `PUT`    | `/objects/:key` | single | Create/Update a relationship object      |\n| `DELETE` | `/objects`      | many   | Delete many objects (sent as JSON data)  |\n| `DELETE` | `/objects/:key` | single | Delete a single object                   |\n\n> NOTE: Not all routes implemented for all types. Please reference the documentation for exact\nroutes and features\n\n\n## Parameters\n\nMost endpoints with methods of type `POST`, `PATCH`, and `PUT` will accept parameters and data\nin JSON format.\n\nHeader: `Content-Type: application/json`\n\n\n## Query Parameters & Filtering\n\nMany API endpoints allow filtering of the results through the use of query parameters. These are\noptional and URL encoded. The list of possible parameters are listed under each route. Many of them\naccept list of values, in the following format:\n\nex. single **Cohort**\n```\n/issues?cohort=alpha\n```\n\nex. List of **Cohorts**\n```\n/issues?cohort=alpha&cohort=beta&cohort=internal\n```\n\nQuery Parameters that accept lists are denoted by the `[]` signifier after their name in the documentation\nfor each endpoint. ex. `cohorts[]`\n\n## Sorting\n\nFor all `sort` parameters, you may include `-` to force *Descending* sort, or leave it off to force\n*Ascending* sort.\n\nThe following will sort by `created_date` descending, with the newest entries last.\n\n`/projects?sort=-created_date`\n\n\nThe following will sort by `created_date` ascending, with the newest entries first.\n\n`/projects?sort=created_date`\n\n\n## Pagination\n\nPagination works on every endpoint, and the following parameters can be passed in to manipulate\nthe page and size of each request.\n\n| Query String Parameter | Required | Description                                                    |\n|:-----------------------|:---------|:---------------------------------------------------------------|\n| page                   | optional | Page number of the result set (default: 1)                     |\n| per_page               | optional | Limit the number of results per page. (default: 100, max: 100) |\n\nExample:\n```\ncurl -X GET \"https://app.memfault.com/api/v0/organizations/memfault/projects/demo/events?per_page=10&page=2\"\n```\n\n## Sorting\n\nFor all `sort` parameters, you may include `-` to force *Descending* sort, or leave it off to force\n*Ascending* sort.\n\nThe following will sort by `created_date` descending, with the newest entries last.\n\n`/projects?sort=-created_date`\n\n\nThe following will sort by `created_date` ascending, with the newest entries first.\n\n`/projects?sort=created_date`\n\n\n## Versions\n\nAll *Versions* are required to be [Semantic Versions](https://semver.org/). If this is a problem,\nlet us know!\n\n# Responses\n\n\n## Pagination\n\nOn responses where multiple items could be returned, a `paging` field in the JSON object is returned.\n\n```\n{\n  \"data\": {\n    ...\n  }\n  \"paging\": {\n    \"item_count\": 35,\n    \"page\": 1,\n    \"page_count\": 1,\n    \"per_page\": 100,\n    \"total_count\": 35\n  }\n}\n```\n\n| Field         | Type     | Description                                                     |\n|:--------------|:---------|:----------------------------------------------------------------|\n| `item_count`  | `Number` | Number of items return in this response                         |\n| `total_count` | `Number` | Number of items total on server that could be returned          |\n| `page`        | `Number` | The current page number                                         |\n| `page_count`  | `Number` | The number of pages that could be returned from the server      |\n| `per_page`    | `Number` | The maximum number of items that will be returned in a response |\n\n\n## Schema\n\nTimestamps are returning in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.\n\n`2014-12-22T03:12:58.019077+00:00`\n\n\n# Memfault Resources\n\nThe following is a table of all Memfault Resources and their identifiers, URI's, and notes about each of them.\n\n| Resource        | Identifier Type | API URI                                                                                 | Notes                                          |\n|:----------------|:----------------|:----------------------------------------------------------------------------------------|:-----------------------------------------------|\n| Organization    | `slug`          | `/organizations/<organization_slug>`                                                    | Max Length: 128<br>Regex: `[-a-zA-Z0-9_]+`     |\n| Project         | `slug`          | `/organizations/<organization_slug>/projects/<project_slug>`                            | Max Length: 128<br>Regex: `[-a-zA-Z0-9_]+`     |\n| Release         | `slug`          | `/organizations/<organization_slug>/projects/<project_slug>/releases/<release_version>` | Max Length: 128<br>Regex: `[-a-zA-Z0-9_\\.\\+]+` |\n| Cohort          | `slug`          | `/organizations/<organization_slug>/projects/<project_slug>/cohorts/<cohort_slug>`      | Max Length: 128<br>Regex: `[-a-zA-Z0-9_]+`     |\n| Device          | `slug`          | `/organizations/<organization_slug>/projects/<project_slug>/devices/<device_serial>`    | Max Length: 128<br>Regex: `[-a-zA-Z0-9_]+`     |\n| HardwareVersion | `slug`          | N/A                                                                                     | Max Length: 128<br>Regex: `[-a-zA-Z0-9_\\.\\+]+` |\n| Deployment      | `id`            | `/organizations/<organization_slug>/projects/<project_slug>/deployments/<id>`           |                                                |\n| Event           | `id`            | `/organizations/<organization_slug>/projects/<project_slug>/events/<id>`                |                                                |\n| Trace           | `id`            | `/organizations/<organization_slug>/projects/<project_slug>/traces/<id>`                |                                                |\n| Issue           | `id`            | `/organizations/<organization_slug>/projects/<project_slug>/issues/<id>`                |                                                |\n| Install         | `id`            | `/organizations/<organization_slug>/projects/<project_slug>/installs/<id>`              |                                                |",
        "contact": {},
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://example.com",
            "variables": {}
        }
    ],
    "paths": {
        "/auth/api_key": {
            "delete": {
                "tags": ["Auth"],
                "summary": "Reset User API key",
                "description": "Invalidate the previously generated API Key for the logged in **User** and do not create another one",
                "operationId": "ResetUserApiKey",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Auth"],
                "summary": "Get User API Key",
                "description": "Get a previously generated API Key for the logged in **User**",
                "operationId": "GetUserApiKey",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserAPIKey"
                                },
                                "example": {
                                    "data": {
                                        "api_key": "dbdd9aa9f9e148b5bc1a1cc828bb1d95"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["Auth"],
                "summary": "Generate User API Key",
                "description": "Generate (or re-generate) an API Key for logged in **User**.\n\nTo generate this without logging into Memfault, you may use HTTP Basic Auth to call this API.",
                "operationId": "GenerateUserApiKey",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerateUserAPIKey"
                                },
                                "example": {
                                    "data": {
                                        "api_key": "dbdd9aa9f9e148b5bc1a1cc828bb1d95"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/auth/me": {
            "get": {
                "tags": ["Auth"],
                "summary": "Me",
                "description": "Return information about the logged in **User**",
                "operationId": "Me",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Me"
                                },
                                "example": {
                                    "created_date": "2019-05-22T04:33:21.472212+00:00",
                                    "email": "john@memfault.com",
                                    "id": 1,
                                    "name": "John",
                                    "organizations": [
                                        {
                                            "id": 1,
                                            "name": "Acme, Inc.",
                                            "slug": "acme-inc"
                                        }
                                    ],
                                    "updated_date": "2019-05-22T04:33:21.483559+00:00"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects": {
            "post": {
                "tags": ["Projects"],
                "summary": "Create a Project",
                "description": "Create a **Project** under the given **Organization**\n\nNOTE: Requires `admin` permission on the **Organization**\n\n<hr>\n\n#### Return Value\n\nReturns a **Project** Schema",
                "operationId": "CreateAProject",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateaProject"
                                },
                                "example": {
                                    "data": {
                                        "api_key": "b8e7e2c93e944440b4245e78c9b3e082",
                                        "count_devices": 0,
                                        "created_date": "2019-05-21T21:08:54.32353+00:00",
                                        "id": 13,
                                        "name": "Smart Sink",
                                        "os": "FreeRTOS",
                                        "platform": "nRF52",
                                        "slug": "smart-sink",
                                        "updated_date": "2019-05-21T21:08:54.396858+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Projects"],
                "summary": "List Projects",
                "description": "List the **Projects** under a given **Organization**\n\n<hr>\n\n#### Return Value\n\nReturns a list of **Project** Schemas",
                "operationId": "ListProjects",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListProjects"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "api_key": "b8e7e2c93e944440b4245e78c9b3e082",
                                            "count_devices": 0,
                                            "created_date": "2019-05-21T21:08:54.32353+00:00",
                                            "id": 13,
                                            "name": "Smart Sink",
                                            "os": "FreeRTOS",
                                            "platform": "nRF52",
                                            "slug": "smart-sink",
                                            "updated_date": "2019-05-21T21:08:54.396858+00:00"
                                        }
                                    ],
                                    "paging": {
                                        "item_count": 1,
                                        "page": 1,
                                        "page_count": 1,
                                        "per_page": 100,
                                        "total_count": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}": {
            "get": {
                "tags": ["Projects"],
                "summary": "Retrieve Project",
                "description": "Retrieve a **Project** under a given **Organization**\n\n<hr>\n\n#### Return Value\n\nReturns a **Project** Schema",
                "operationId": "RetrieveProject",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrieveProject"
                                },
                                "example": {
                                    "data": {
                                        "api_key": "b8e7e2c93e944440b4245e78c9b3e082",
                                        "count_devices": 0,
                                        "created_date": "2019-05-21T21:08:54.32353+00:00",
                                        "id": 13,
                                        "name": "Smart Sink",
                                        "os": "FreeRTOS",
                                        "platform": "nRF52",
                                        "slug": "smart-sink",
                                        "updated_date": "2019-05-21T21:08:54.396858+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": ["Projects"],
                "summary": "Update Project",
                "description": "Update a **Project** under a given **Organization**\n\nNOTE: Requires `admin` permission on the **Organization**\n\n<hr>\n\n#### Return Value\n\nReturns a **Project** Schema",
                "operationId": "UpdateProject",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateProject"
                                },
                                "example": {
                                    "data": {
                                        "api_key": "b8e7e2c93e944440b4245e78c9b3e082",
                                        "count_devices": 0,
                                        "created_date": "2019-05-21T21:08:54.32353+00:00",
                                        "id": 13,
                                        "name": "Smart Sink",
                                        "os": "FreeRTOS-AWS",
                                        "platform": "nRF52",
                                        "slug": "smart-sink",
                                        "updated_date": "2019-05-21T21:09:41.48637+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["Projects"],
                "summary": "Delete Project",
                "description": "Delete a **Project** under a given **Organization**\n\nNOTE: Requires `admin` permission on the **Organization**\n\n<hr>\n\n#### Return Value\n\nReturns `204 - No Content`",
                "operationId": "DeleteProject",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/api_key": {
            "get": {
                "tags": ["Projects"],
                "summary": "Get Project Client Key",
                "description": "Return the **Project** Client Key\n\n<hr>\n\n#### Return Value\n\n```JSON\n{\n  \"api_key\": \"87c2ca9d3ec148ac82034fc2724ff614\"\n}\n```",
                "operationId": "GetProjectClientKey",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProjectClientKey"
                                },
                                "example": {
                                    "data": {
                                        "api_key": "b8e7e2c93e944440b4245e78c9b3e082"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["Projects"],
                "summary": "Refresh Project Client Key",
                "description": "Regenerate the **Project** Client Key\n\nNOTE: This will make all **Devices** that currently send data using the key **stop working**. Please, please please make sure this is what you want to do.\n\n<hr>\n\n#### Return Value\n\n```JSON\n{\n  \"api_key\": \"87c2ca9d3ec148ac82034fc2724ff614\"\n}\n```",
                "operationId": "RefreshProjectClientKey",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshProjectClientKey"
                                },
                                "example": {
                                    "data": {
                                        "api_key": "b13aa6db4cc54709957be890eb822221"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/releases/{release_version}/artifacts": {
            "post": {
                "tags": ["Artifacts"],
                "summary": "Upload Artifact for Release",
                "description": "Upload an **Artifact** for the given **Release** and *Hardware Revision*\n\n<hr>\n\n#### Return Value\n\nOnce the entire file is uploaded to Memfault (may take a while), the server will return a `202 Accepted` response and `Location` header for which to check the status of the *Task*.\n\n```\nLocation: https://api.memfault.com/api/v0/queue/bb992299-f64a-4d47-8372-7e16aff9fdc3\n```",
                "operationId": "UploadArtifactForRelease",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "release_version",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "file",
                                    "type",
                                    "filename",
                                    "hardware_version"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "description": "multipart encoded file"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Artifact Type",
                                        "example": "firmware OR symbols"
                                    },
                                    "filename": {
                                        "type": "string",
                                        "description": "Filename of uploaded artifact"
                                    },
                                    "hardware_version": {
                                        "type": "string",
                                        "description": "Hardware Revision"
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "202": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "example": {}
                                },
                                "example": {}
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/releases": {
            "post": {
                "tags": ["Releases"],
                "summary": "Create a Release",
                "description": "Create a **Release** for a given **Project**\n\nNOTE: A **Release** *does not* need to be manually created using this endpoint. If Memfault receives any **Events** from an unknown **Release**, it will *create* one with the appropriate information.\n\n<hr>\n\n#### Return Value\n\n- Returns a **Release** Schema\n- Returns a `Location` header with a URL for which to upload binaries and symbols to",
                "operationId": "CreateARelease",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateaRelease"
                                },
                                "example": {
                                    "data": {
                                        "artifacts": [],
                                        "count_devices": 0,
                                        "created_date": "2019-05-21T21:15:08.593624+00:00",
                                        "extra_info": null,
                                        "id": 113,
                                        "min_version": "",
                                        "notes": "",
                                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                        "updated_date": "2019-05-21T21:15:08.596886+00:00",
                                        "version": "1.0.0"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Releases"],
                "summary": "List Releases",
                "description": "List all **Releases** for a given **Project**\n\n<hr>\n\n#### Return Value\n\nReturns a list of **Release** Schemas",
                "operationId": "ListReleases",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListReleases"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "artifacts": [],
                                            "count_devices": 0,
                                            "created_date": "2019-05-21T21:15:08.593624+00:00",
                                            "extra_info": null,
                                            "id": 113,
                                            "min_version": "",
                                            "notes": "",
                                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                            "updated_date": "2019-05-21T21:15:08.596886+00:00",
                                            "version": "1.0.0"
                                        }
                                    ],
                                    "paging": {
                                        "item_count": 1,
                                        "page": 1,
                                        "page_count": 1,
                                        "per_page": 100,
                                        "total_count": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/releases/{release_version}": {
            "get": {
                "tags": ["Releases"],
                "summary": "Retrieve a Release",
                "description": "Retrieve a single **Release**\n\n<hr>\n\n#### Return Value\n\nReturns a **Release** Schema",
                "operationId": "RetrieveARelease",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "release_version",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrieveaRelease"
                                },
                                "example": {
                                    "data": {
                                        "artifacts": [],
                                        "count_devices": 0,
                                        "created_date": "2019-05-21T21:15:08.593624+00:00",
                                        "extra_info": null,
                                        "id": 113,
                                        "min_version": "",
                                        "notes": "",
                                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                        "updated_date": "2019-05-21T21:15:08.596886+00:00",
                                        "version": "1.0.0"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": ["Releases"],
                "summary": "Update a Release",
                "description": "Update a single **Release**\n\n<hr>\n\n#### Return Value\n\nReturns a **Release** Schema",
                "operationId": "UpdateARelease",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "release_version",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateaRelease"
                                },
                                "example": {
                                    "data": {
                                        "artifacts": [],
                                        "count_devices": 0,
                                        "created_date": "2019-05-21T21:26:55.207463+00:00",
                                        "extra_info": null,
                                        "id": 7,
                                        "min_version": "",
                                        "notes": "",
                                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                        "updated_date": "2019-05-21T21:26:55.209415+00:00",
                                        "version": "1.0.0"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["Releases"],
                "summary": "Delete a Release",
                "description": "Delete a single **Release**\n\n<hr>\n\n#### Return Value\n\nReturns `204 - No Content`",
                "operationId": "DeleteARelease",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "release_version",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/releases/latest": {
            "get": {
                "tags": ["Releases"],
                "summary": "Retrieve Latest Release for a Device",
                "description": "For a given **Device** (*Device Unique Identifier* and *Hardware Revision*), return the latest **Release** that should be installed.\n\n| Query Parameter                             | Type     | Description                                                                                          |\n|:--------------------------------------------|:---------|:-----------------------------------------------------------------------------------------------------|\n| `hardware_version` <br>**Required**         | `String` | Hardware Version of the **Device**                                                                   |\n| `current_version` <br>**Heavily Suggested** | `String` | The **Release** version that the **Device** is currently running (used for hopping through versions) |\n| `device_serial` <br>**Heavily Suggested**   | `String` | The **Device** serial to identify a particular device (used for determining the **Cohort**)          |\n\nNOTE: This endpoint *requires* that the sender use a custom HTTP header defining the Memfault Project Client Key. \n\n`Memfault-Project-Key: 87c2ca9d3ec148ac82034fc2724ff614`\n\n<hr>\n\n#### Return Value\n\nReturns a **Release** Schema",
                "operationId": "RetrieveLatestReleaseForADevice",
                "parameters": [
                    {
                        "name": "Memfault-Project-Key",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "87c2ca9d3ec148ac82034fc2724ff614"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/cohorts": {
            "post": {
                "tags": ["Cohorts"],
                "summary": "Create a Cohort",
                "description": "Create a **Cohort** for the given **Project**\n\n<hr>\n\n#### Return Value\n\nReturns a **Cohort** Schema",
                "operationId": "CreateACohort",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateaCohort"
                                },
                                "example": {
                                    "data": {
                                        "count_devices": 0,
                                        "created_date": "2019-05-21T21:55:34.349088+00:00",
                                        "id": 7,
                                        "last_deployment": null,
                                        "name": "Internal Channel",
                                        "slug": "internal",
                                        "updated_date": "2019-05-21T21:55:34.349106+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Cohorts"],
                "summary": "List Cohorts",
                "description": "List all **Cohorts** for the given **Project**\n\n<hr>\n\n#### Return Value\n\nReturns a list of **Cohort** Schemas",
                "operationId": "ListCohorts",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListCohorts"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "count_devices": 0,
                                            "created_date": "2019-05-21T21:26:48.477897+00:00",
                                            "id": 5,
                                            "last_deployment": null,
                                            "name": "default",
                                            "slug": "default",
                                            "updated_date": "2019-05-21T21:26:48.477903+00:00"
                                        },
                                        {
                                            "count_devices": 0,
                                            "created_date": "2019-05-21T21:55:34.349088+00:00",
                                            "id": 7,
                                            "last_deployment": null,
                                            "name": "Internal Channel",
                                            "slug": "internal",
                                            "updated_date": "2019-05-21T21:55:34.349106+00:00"
                                        }
                                    ],
                                    "paging": {
                                        "item_count": 2,
                                        "page": 1,
                                        "page_count": 1,
                                        "per_page": 100,
                                        "total_count": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/cohorts/{cohort_slug}": {
            "get": {
                "tags": ["Cohorts"],
                "summary": "Retrieve a Cohort",
                "description": "Retrieve a single **Cohort**\n\n<hr>\n\n#### Return Value\n\nReturns a **Cohort** Schema",
                "operationId": "RetrieveACohort",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cohort_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrieveaCohort"
                                },
                                "example": {
                                    "data": {
                                        "count_devices": 0,
                                        "created_date": "2019-05-21T21:55:34.349088+00:00",
                                        "id": 7,
                                        "last_deployment": null,
                                        "name": "Internal Channel",
                                        "slug": "internal",
                                        "updated_date": "2019-05-21T21:55:34.349106+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": ["Cohorts"],
                "summary": "Update a Cohort",
                "description": "Update a single **Cohort**\n\n<hr>\n\n#### Return Value\n\nReturns a **Cohort** Schema",
                "operationId": "UpdateACohort",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cohort_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateaCohort"
                                },
                                "example": {
                                    "data": {
                                        "count_devices": 0,
                                        "created_date": "2019-05-21T21:55:34.349088+00:00",
                                        "id": 7,
                                        "last_deployment": null,
                                        "name": "Internal Group",
                                        "slug": "internal",
                                        "updated_date": "2019-05-21T22:03:48.302371+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["Cohorts"],
                "summary": "Delete a Cohort",
                "description": "Delete a single **Cohort**\n\n<hr>\n\n#### Return Value\n\nReturns `204 - No Content`",
                "operationId": "DeleteACohort",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cohort_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/cohorts/{cohort_slug}/devices": {
            "get": {
                "tags": ["Cohorts"],
                "summary": "List Devices in a Cohort",
                "description": "List the **Devices** in the given **Cohort**\n\n<hr>\n\n#### Return Value\n\nReturns a list of **Device** Schemas",
                "operationId": "ListDevicesInACohort",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cohort_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDevicesinaCohort"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "cohort": {
                                                "count_devices": 1,
                                                "id": 7,
                                                "name": "Internal Group",
                                                "slug": "internal"
                                            },
                                            "created_date": "2019-05-21T22:08:17.289061+00:00",
                                            "device_serial": "ABCD1234",
                                            "hardware_version": "evt",
                                            "id": 35,
                                            "last_seen": null,
                                            "last_seen_release": null,
                                            "latest_install": null,
                                            "latest_trace": null,
                                            "owner_ref": "user1234",
                                            "updated_date": "2019-05-21T22:11:55.900182+00:00"
                                        }
                                    ],
                                    "paging": {
                                        "item_count": 1,
                                        "page": 1,
                                        "page_count": 1,
                                        "per_page": 100,
                                        "total_count": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": ["Cohorts"],
                "summary": "Move Devices to a Cohort",
                "description": "Move **Devices** to the given **Cohort**\n\nNOTE: This will remove the **Devices** from their previous **Cohort**.\n\n<hr>\n\n#### Return Value\n\nReturns `204 - No Content`",
                "operationId": "MoveDevicesToACohort",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cohort_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/deployments": {
            "post": {
                "tags": ["Deployments"],
                "summary": "Create a Deployment",
                "description": "**Deploy** the given **Release** to the given **Cohort**\n\n<hr>\n\n#### Return Value\n\nReturns a **Deployment** Schema",
                "operationId": "CreateADeployment",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateaDeployment"
                                },
                                "example": {
                                    "data": {
                                        "cohort": {
                                            "count_devices": 1,
                                            "id": 7,
                                            "name": "Internal Group",
                                            "slug": "internal"
                                        },
                                        "created_date": "2019-05-21T22:49:23.851977+00:00",
                                        "deployed_date": "2019-05-21T22:49:23.851977+00:00",
                                        "deployer": {
                                            "email": "tyler@memfault.com",
                                            "id": 1,
                                            "name": "John"
                                        },
                                        "extra_info": null,
                                        "id": 9,
                                        "release": {
                                            "id": 8,
                                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                            "version": "1.0.0"
                                        },
                                        "rollout_percent": 0,
                                        "status": "done",
                                        "type": "normal",
                                        "updated_date": "2019-05-21T22:49:23.851983+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Deployments"],
                "summary": "List Deployments",
                "description": "List all **Deployments** for the given **Project**\n\n<hr>\n\n#### Return Value\n\nReturns a list of **Deployment** Schemas",
                "operationId": "ListDeployments",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDeployments"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "cohort": {
                                                "count_devices": 1,
                                                "id": 7,
                                                "name": "Internal Group",
                                                "slug": "internal"
                                            },
                                            "created_date": "2019-05-21T22:49:23.851977+00:00",
                                            "deployed_date": "2019-05-21T22:49:23.851977+00:00",
                                            "deployer": {
                                                "email": "tyler@memfault.com",
                                                "id": 1,
                                                "name": "John"
                                            },
                                            "extra_info": null,
                                            "id": 9,
                                            "release": {
                                                "id": 8,
                                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                                "version": "1.0.0"
                                            },
                                            "rollout_percent": 0,
                                            "status": "done",
                                            "type": "normal",
                                            "updated_date": "2019-05-21T22:49:23.851983+00:00"
                                        }
                                    ],
                                    "paging": {
                                        "item_count": 1,
                                        "page": 1,
                                        "page_count": 1,
                                        "per_page": 100,
                                        "total_count": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/deployments/{deployment_id}": {
            "get": {
                "tags": ["Deployments"],
                "summary": "Retrieve a Deployment",
                "description": "Retrieve a single **Deployment**\n\n<hr>\n\n#### Return Value\n\nReturns a **Deployment** Schema",
                "operationId": "RetrieveADeployment",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "deployment_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrieveaDeployment"
                                },
                                "example": {
                                    "data": {
                                        "cohort": {
                                            "count_devices": 1,
                                            "id": 7,
                                            "name": "Internal Group",
                                            "slug": "internal"
                                        },
                                        "created_date": "2019-05-21T22:49:23.851977+00:00",
                                        "deployed_date": "2019-05-21T22:49:23.851977+00:00",
                                        "deployer": {
                                            "email": "tyler@memfault.com",
                                            "id": 1,
                                            "name": "John"
                                        },
                                        "extra_info": null,
                                        "id": 9,
                                        "release": {
                                            "id": 8,
                                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                            "version": "1.0.0"
                                        },
                                        "rollout_percent": 0,
                                        "status": "done",
                                        "type": "normal",
                                        "updated_date": "2019-05-21T22:49:23.851983+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": ["Deployments"],
                "summary": "Update a Deployment",
                "description": "Update a single **Deployment**\n\n<hr>\n\n#### Return Value\n\nReturns a **Deployment** Schema",
                "operationId": "UpdateADeployment",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "deployment_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateaDeployment"
                                },
                                "example": {
                                    "data": {
                                        "cohort": {
                                            "count_devices": 1,
                                            "id": 7,
                                            "name": "Internal Group",
                                            "slug": "internal"
                                        },
                                        "created_date": "2019-05-21T22:49:23.851977+00:00",
                                        "deployed_date": "2019-05-21T22:49:23.851977+00:00",
                                        "deployer": {
                                            "email": "tyler@memfault.com",
                                            "id": 1,
                                            "name": "John"
                                        },
                                        "extra_info": {
                                            "ci": "jenkins"
                                        },
                                        "id": 9,
                                        "release": {
                                            "id": 8,
                                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                            "version": "1.0.0"
                                        },
                                        "rollout_percent": 0,
                                        "status": "done",
                                        "type": "normal",
                                        "updated_date": "2019-05-21T22:50:57.591108+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/devices": {
            "post": {
                "tags": ["Devices"],
                "summary": "Create Devices",
                "description": "Create a single **Device** for a given **Project**\n\nNOTE: A **Device** *does not* need to be manually created using this endpoint. If Memfault receives any **Events** from an unknown **Device**, it will *create* one with the appropriate information.\n\n<hr>\n\n#### Return Value\n\nA `202 Accepted` response and `Location` header for which to check the status of the *Task*.\n\n```\nLocation: https://api.memfault.com/api/v0/queue/bb992299-f64a-4d47-8372-7e16aff9fdc3\n```",
                "operationId": "CreateDevices",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSingleDevice"
                                },
                                "example": {
                                    "data": {
                                        "cohort": {
                                            "count_devices": 1,
                                            "id": 7,
                                            "name": "Internal Group",
                                            "slug": "internal"
                                        },
                                        "created_date": "2019-05-21T22:08:17.289061+00:00",
                                        "device_serial": "ABCD1234",
                                        "hardware_version": "evt",
                                        "id": 35,
                                        "last_seen": null,
                                        "last_seen_release": null,
                                        "latest_install": null,
                                        "latest_trace": null,
                                        "owner_ref": "",
                                        "updated_date": "2019-05-21T22:08:17.296289+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Devices"],
                "summary": "List Devices",
                "description": "List all **Devices** for a given **Project**\n\n<hr>\n\n#### Return Value\n\nReturns a list of **Device** Schemas",
                "operationId": "ListDevices",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDevices"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "cohort": {
                                                "count_devices": 1,
                                                "id": 7,
                                                "name": "Internal Group",
                                                "slug": "internal"
                                            },
                                            "created_date": "2019-05-21T22:08:17.289061+00:00",
                                            "device_serial": "ABCD1234",
                                            "hardware_version": "evt",
                                            "id": 35,
                                            "last_seen": null,
                                            "last_seen_release": null,
                                            "latest_install": null,
                                            "latest_trace": null,
                                            "owner_ref": "",
                                            "updated_date": "2019-05-21T22:08:17.296289+00:00"
                                        }
                                    ],
                                    "paging": {
                                        "item_count": 1,
                                        "page": 1,
                                        "page_count": 1,
                                        "per_page": 100,
                                        "total_count": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/devices/{device_serial}": {
            "get": {
                "tags": ["Devices"],
                "summary": "Retrieve a Device",
                "description": "Retrieve a single **Device**\n\n<hr>\n\n#### Return Value\n\nReturns a **Device** Schema",
                "operationId": "RetrieveADevice",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device_serial",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrieveaDevice"
                                },
                                "example": {
                                    "data": {
                                        "cohort": {
                                            "count_devices": 1,
                                            "id": 7,
                                            "name": "Internal Group",
                                            "slug": "internal"
                                        },
                                        "created_date": "2019-05-21T22:08:17.289061+00:00",
                                        "device_serial": "ABCD1234",
                                        "hardware_version": "evt",
                                        "id": 35,
                                        "last_seen": null,
                                        "last_seen_release": null,
                                        "latest_install": null,
                                        "latest_trace": null,
                                        "owner_ref": "user1234",
                                        "updated_date": "2019-05-21T22:11:55.900182+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": ["Devices"],
                "summary": "Update a Device",
                "description": "Update a single **Device**\n\n<hr>\n\n#### Return Value\n\nReturns a **Device** Schema",
                "operationId": "UpdateADevice",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device_serial",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateaDevice"
                                },
                                "example": {
                                    "data": {
                                        "cohort": {
                                            "count_devices": 1,
                                            "id": 7,
                                            "name": "Internal Group",
                                            "slug": "internal"
                                        },
                                        "created_date": "2019-05-21T22:08:17.289061+00:00",
                                        "device_serial": "ABCD1234",
                                        "hardware_version": "evt",
                                        "id": 35,
                                        "last_seen": null,
                                        "last_seen_release": null,
                                        "latest_install": null,
                                        "latest_trace": null,
                                        "owner_ref": "user1234",
                                        "updated_date": "2019-05-21T22:11:55.900182+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["Devices"],
                "summary": "Delete a Device",
                "description": "Delete a single **Device**\n\n<hr>\n\n#### Return Value\n\nReturns `204 - No Content`",
                "operationId": "DeleteADevice",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device_serial",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/events": {
            "post": {
                "tags": ["Events"],
                "summary": "Upload Events",
                "description": "Upload many **Events** for a given **Project**\n\nNOTE: This endpoint *requires* that the sender use a custom HTTP header defining the Memfault Project Client Key. \n\n`Memfault-Project-Key: 87c2ca9d3ec148ac82034fc2724ff614`\n\n<hr>\n\n#### Return Value\n\nA `202 Accepted` response and `Location` header for which to check the status of the *Task*.\n\n```\nLocation: https://api.memfault.com/api/v0/queue/bb992299-f64a-4d47-8372-7e16aff9fdc3\n```",
                "operationId": "UploadEvents",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Memfault-Project-Key",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "example": {}
                                },
                                "example": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadEvents-InvalidSchema"
                                },
                                "example": {
                                    "error": {
                                        "code": 1000,
                                        "http_code": 400,
                                        "message": {
                                            "0": {
                                                "event_info": {
                                                    "metrics": {
                                                        "uptime_s": {
                                                            "value": [
                                                                "Not a valid integer."
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "type": "InvalidUsageError"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/events": {
            "get": {
                "tags": ["Events"],
                "summary": "List Events",
                "description": "List all **Events** for a given **Project**\n\n<hr>\n\n#### Return Value\n\nReturns a list of **Event** Schemas",
                "operationId": "ListEvents",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListEvents"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "captured_date": "2019-05-21T22:19:57.782341+00:00",
                                            "created_date": "2019-05-21T22:19:57.782328+00:00",
                                            "device": {
                                                "device_serial": "ABCD1234",
                                                "hardware_version": "evt",
                                                "id": 35
                                            },
                                            "event_info": {
                                                "lr": 226574,
                                                "pc": 226689,
                                                "reason": 32769,
                                                "sp": 6712
                                            },
                                            "id": 3869,
                                            "received_date": "2019-05-21T22:19:57.782338+00:00",
                                            "release": {
                                                "id": 8,
                                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                                "version": "1.0.0"
                                            },
                                            "type": "trace",
                                            "user_info": null
                                        }
                                    ],
                                    "paging": {
                                        "item_count": 1,
                                        "page": 1,
                                        "page_count": 1,
                                        "per_page": 100,
                                        "total_count": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/events/{event_id}": {
            "get": {
                "tags": ["Events"],
                "summary": "Retrieve an Event",
                "description": "Retrieve a single **Event**\n\n<hr>\n\n#### Return Value\n\nReturns an **Event** Schema",
                "operationId": "RetrieveAnEvent",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrieveanEvent"
                                },
                                "example": {
                                    "data": {
                                        "captured_date": "2019-05-21T22:19:57.782341+00:00",
                                        "created_date": "2019-05-21T22:19:57.782328+00:00",
                                        "device": {
                                            "device_serial": "ABCD1234",
                                            "hardware_version": "evt",
                                            "id": 35
                                        },
                                        "event_info": {
                                            "lr": 226574,
                                            "pc": 226689,
                                            "reason": 32769,
                                            "sp": 6712
                                        },
                                        "id": 3869,
                                        "received_date": "2019-05-21T22:19:57.782338+00:00",
                                        "release": {
                                            "id": 8,
                                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                            "version": "1.0.0"
                                        },
                                        "type": "trace",
                                        "user_info": null
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/issues": {
            "get": {
                "tags": ["Issues"],
                "summary": "List Issues",
                "description": "List all **Issues** for a given **Project**\n\n<hr>\n\n#### Return Value\n\nReturns a list of **Issue** Schemas",
                "operationId": "ListIssues",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIssues"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "counts": [
                                                10,
                                                11,
                                                15,
                                                10,
                                                10,
                                                11,
                                                12,
                                                6,
                                                5,
                                                15,
                                                11,
                                                10,
                                                13,
                                                12,
                                                15,
                                                5,
                                                4,
                                                10,
                                                7,
                                                5,
                                                4,
                                                11,
                                                15,
                                                14
                                            ],
                                            "created_date": "2019-05-21T22:32:58.168618+00:00",
                                            "device_count": 1,
                                            "distribution": {
                                                "hardware_version": [
                                                    {
                                                        "count": 13,
                                                        "version": "qq_pvt"
                                                    },
                                                    {
                                                        "count": 9,
                                                        "version": "xx_evt"
                                                    }
                                                ],
                                                "sw_version": [
                                                    {
                                                        "count": 13,
                                                        "version": "0.9"
                                                    },
                                                    {
                                                        "count": 7,
                                                        "version": "1.0.0"
                                                    },
                                                    {
                                                        "count": 9,
                                                        "version": "1.0.1"
                                                    }
                                                ]
                                            },
                                            "first_release": {
                                                "id": 8,
                                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                                "version": "1.0.0"
                                            },
                                            "first_seen": "2019-05-21T22:32:57.801998+00:00",
                                            "id": 11,
                                            "last_release": {
                                                "id": 8,
                                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                                "version": "1.0.0"
                                            },
                                            "last_seen": "2019-05-21T22:32:57.801998+00:00",
                                            "last_trace": {
                                                "captured_date": "2019-05-21T22:32:57.801998+00:00",
                                                "context": "",
                                                "created_date": "2019-05-21T22:32:57.801961+00:00",
                                                "device": {
                                                    "device_serial": "ABCD1234",
                                                    "hardware_version": "evt",
                                                    "id": 35
                                                },
                                                "entries": {
                                                    "threads": [
                                                        {
                                                            "crashed": false,
                                                            "current": true,
                                                            "registers": [],
                                                            "reporting": false,
                                                            "stacktrace": [
                                                                {
                                                                    "address": 226689,
                                                                    "context": [],
                                                                    "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                                                                    "function": "memfault_reboot_tracking_mark_crash",
                                                                    "index": 0,
                                                                    "lineno": 85
                                                                },
                                                                {
                                                                    "address": 226574,
                                                                    "context": [],
                                                                    "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c",
                                                                    "function": "memfault_reboot_tracking_assert_handler",
                                                                    "index": 1,
                                                                    "lineno": 171
                                                                }
                                                            ],
                                                            "state": "unknown",
                                                            "tid": 1
                                                        }
                                                    ]
                                                },
                                                "id": 20,
                                                "message": "",
                                                "reason": "Assert",
                                                "received_date": "2019-05-21T22:32:57.801994+00:00",
                                                "release": {
                                                    "id": 8,
                                                    "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                                    "version": "1.0.0"
                                                },
                                                "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                                                "source_type": "event",
                                                "title": "Assert at memfault_reboot_tracking_assert_handler"
                                            },
                                            "message": "",
                                            "resolution": null,
                                            "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                                            "status": "open",
                                            "title": "Assert at memfault_reboot_tracking_assert_handler",
                                            "trace_count": 1,
                                            "updated_date": "2019-05-21T22:32:58.168622+00:00"
                                        }
                                    ],
                                    "paging": {
                                        "item_count": 1,
                                        "page": 1,
                                        "page_count": 1,
                                        "per_page": 100,
                                        "total_count": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/issues/{issue_id}": {
            "get": {
                "tags": ["Issues"],
                "summary": "Retrieve an Issue",
                "description": "Retrieve a single **Issue**\n\n<hr>\n\n#### Return Value\n\nReturns an **Issue** Schema",
                "operationId": "RetrieveAnIssue",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrieveanIssue"
                                },
                                "example": {
                                    "data": {
                                        "counts": [
                                            10,
                                            11,
                                            15,
                                            10,
                                            10,
                                            11,
                                            12,
                                            6,
                                            5,
                                            15,
                                            11,
                                            10,
                                            13,
                                            12,
                                            15,
                                            5,
                                            4,
                                            10,
                                            7,
                                            5,
                                            4,
                                            11,
                                            15,
                                            14
                                        ],
                                        "created_date": "2019-05-21T22:32:58.168618+00:00",
                                        "device_count": 1,
                                        "distribution": {
                                            "hardware_version": [
                                                {
                                                    "count": 13,
                                                    "version": "qq_pvt"
                                                },
                                                {
                                                    "count": 9,
                                                    "version": "xx_evt"
                                                }
                                            ],
                                            "sw_version": [
                                                {
                                                    "count": 13,
                                                    "version": "0.9"
                                                },
                                                {
                                                    "count": 7,
                                                    "version": "1.0.0"
                                                },
                                                {
                                                    "count": 9,
                                                    "version": "1.0.1"
                                                }
                                            ]
                                        },
                                        "first_release": {
                                            "id": 8,
                                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                            "version": "1.0.0"
                                        },
                                        "first_seen": "2019-05-21T22:32:57.801998+00:00",
                                        "id": 11,
                                        "last_release": {
                                            "id": 8,
                                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                            "version": "1.0.0"
                                        },
                                        "last_seen": "2019-05-21T22:32:57.801998+00:00",
                                        "last_trace": {
                                            "captured_date": "2019-05-21T22:32:57.801998+00:00",
                                            "context": "",
                                            "created_date": "2019-05-21T22:32:57.801961+00:00",
                                            "device": {
                                                "device_serial": "ABCD1234",
                                                "hardware_version": "evt",
                                                "id": 35
                                            },
                                            "entries": {
                                                "threads": [
                                                    {
                                                        "crashed": false,
                                                        "current": true,
                                                        "registers": [],
                                                        "reporting": false,
                                                        "stacktrace": [
                                                            {
                                                                "address": 226689,
                                                                "context": [],
                                                                "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                                                                "function": "memfault_reboot_tracking_mark_crash",
                                                                "index": 0,
                                                                "lineno": 85
                                                            },
                                                            {
                                                                "address": 226574,
                                                                "context": [],
                                                                "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c",
                                                                "function": "memfault_reboot_tracking_assert_handler",
                                                                "index": 1,
                                                                "lineno": 171
                                                            }
                                                        ],
                                                        "state": "unknown",
                                                        "tid": 1
                                                    }
                                                ]
                                            },
                                            "id": 20,
                                            "message": "",
                                            "reason": "Assert",
                                            "received_date": "2019-05-21T22:32:57.801994+00:00",
                                            "release": {
                                                "id": 8,
                                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                                "version": "1.0.0"
                                            },
                                            "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                                            "source_type": "event",
                                            "title": "Assert at memfault_reboot_tracking_assert_handler"
                                        },
                                        "message": "",
                                        "resolution": null,
                                        "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                                        "status": "open",
                                        "title": "Assert at memfault_reboot_tracking_assert_handler",
                                        "trace_count": 1,
                                        "updated_date": "2019-05-21T22:32:58.168622+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["Issues"],
                "summary": "Delete an Issue",
                "description": "Delete a single **Issue**\n\n<hr>\n\n#### Return Value\n\nReturns `204 - No Content`",
                "operationId": "DeleteAnIssue",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "issue_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/issues/11": {
            "patch": {
                "tags": ["Issues"],
                "summary": "Update an Issue",
                "description": "Update a single **Issue**\n\n<hr>\n\n#### Return Value\n\nReturns a **Issue** Schema",
                "operationId": "UpdateAnIssue",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateanIssueRequest"
                            },
                            "example": {
                                "status": "open"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateanIssue"
                                },
                                "example": {
                                    "data": {
                                        "counts": [
                                            10,
                                            11,
                                            15,
                                            10,
                                            10,
                                            11,
                                            12,
                                            6,
                                            5,
                                            15,
                                            11,
                                            10,
                                            13,
                                            12,
                                            15,
                                            5,
                                            4,
                                            10,
                                            7,
                                            5,
                                            4,
                                            11,
                                            15,
                                            14
                                        ],
                                        "created_date": "2019-05-21T22:32:58.168618+00:00",
                                        "device_count": 1,
                                        "distribution": {
                                            "hardware_version": [
                                                {
                                                    "count": 13,
                                                    "version": "qq_pvt"
                                                },
                                                {
                                                    "count": 9,
                                                    "version": "xx_evt"
                                                }
                                            ],
                                            "sw_version": [
                                                {
                                                    "count": 13,
                                                    "version": "0.9"
                                                },
                                                {
                                                    "count": 7,
                                                    "version": "1.0.0"
                                                },
                                                {
                                                    "count": 9,
                                                    "version": "1.0.1"
                                                }
                                            ]
                                        },
                                        "first_release": {
                                            "id": 8,
                                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                            "version": "1.0.0"
                                        },
                                        "first_seen": "2019-05-21T22:32:57.801998+00:00",
                                        "id": 11,
                                        "last_release": {
                                            "id": 8,
                                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                            "version": "1.0.0"
                                        },
                                        "last_seen": "2019-05-21T22:32:57.801998+00:00",
                                        "last_trace": {
                                            "captured_date": "2019-05-21T22:32:57.801998+00:00",
                                            "context": "",
                                            "created_date": "2019-05-21T22:32:57.801961+00:00",
                                            "device": {
                                                "device_serial": "ABCD1234",
                                                "hardware_version": "evt",
                                                "id": 35
                                            },
                                            "entries": {
                                                "threads": [
                                                    {
                                                        "crashed": false,
                                                        "current": true,
                                                        "registers": [],
                                                        "reporting": false,
                                                        "stacktrace": [
                                                            {
                                                                "address": 226689,
                                                                "context": [],
                                                                "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                                                                "function": "memfault_reboot_tracking_mark_crash",
                                                                "index": 0,
                                                                "lineno": 85
                                                            },
                                                            {
                                                                "address": 226574,
                                                                "context": [],
                                                                "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c",
                                                                "function": "memfault_reboot_tracking_assert_handler",
                                                                "index": 1,
                                                                "lineno": 171
                                                            }
                                                        ],
                                                        "state": "unknown",
                                                        "tid": 1
                                                    }
                                                ]
                                            },
                                            "id": 20,
                                            "message": "",
                                            "reason": "Assert",
                                            "received_date": "2019-05-21T22:32:57.801994+00:00",
                                            "release": {
                                                "id": 8,
                                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                                "version": "1.0.0"
                                            },
                                            "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                                            "source_type": "event",
                                            "title": "Assert at memfault_reboot_tracking_assert_handler"
                                        },
                                        "message": "",
                                        "resolution": {
                                            "actor": {
                                                "email": "tyler@memfault.com",
                                                "id": 1,
                                                "name": "John"
                                            },
                                            "timestamp": "2019-05-21T22:44:36.438341+00:00"
                                        },
                                        "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                                        "status": "resolved",
                                        "title": "Assert at memfault_reboot_tracking_assert_handler",
                                        "trace_count": 1,
                                        "updated_date": "2019-05-21T22:44:36.439351+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/installs": {
            "get": {
                "tags": ["Installs"],
                "summary": "List Installs",
                "description": "List all **Installs** for a given **Project**\n\n<hr>\n\n#### Return Value\n\nReturns a list of **Install** Schemas",
                "operationId": "ListInstalls",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListInstalls"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "began_at": "2019-05-21T22:19:57.762973+00:00",
                                            "created_date": "2019-05-21T22:19:57.762973+00:00",
                                            "device": {
                                                "device_serial": "ABCD1234",
                                                "hardware_version": "evt",
                                                "id": 35
                                            },
                                            "id": 53,
                                            "release": {
                                                "id": 8,
                                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                                "version": "1.0.0"
                                            },
                                            "status": "success",
                                            "transitioned_at": "2019-05-21T22:19:57.771497+00:00",
                                            "updated_date": "2019-05-21T22:19:57.778679+00:00"
                                        }
                                    ],
                                    "paging": {
                                        "item_count": 1,
                                        "page": 1,
                                        "page_count": 1,
                                        "per_page": 100,
                                        "total_count": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/organizations/{organization_slug}/projects/{project_slug}/installs/{install_id}": {
            "get": {
                "tags": ["Installs"],
                "summary": "Retrieve an Install",
                "description": "Retrieve a single **Install**\n\n<hr>\n\n#### Return Value\n\nReturns an **Install** Schema",
                "operationId": "RetrieveAnInstall",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "install_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrieveanInstall"
                                },
                                "example": {
                                    "data": {
                                        "began_at": "2019-05-21T22:19:57.762973+00:00",
                                        "created_date": "2019-05-21T22:19:57.762973+00:00",
                                        "device": {
                                            "device_serial": "ABCD1234",
                                            "hardware_version": "evt",
                                            "id": 35
                                        },
                                        "id": 53,
                                        "release": {
                                            "id": 8,
                                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                            "version": "1.0.0"
                                        },
                                        "status": "success",
                                        "transitioned_at": "2019-05-21T22:19:57.771497+00:00",
                                        "updated_date": "2019-05-21T22:19:57.778679+00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["Installs"],
                "summary": "Delete an Install",
                "description": "Delete a single **Install**\n\n<hr>\n\n#### Return Value\n\nReturns `204 - No Content`",
                "operationId": "DeleteAnInstall",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project_slug",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "install_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/upload/coredump": {
            "post": {
                "tags": ["Upload"],
                "summary": "Upload Coredump",
                "description": "Upload a *Coredump* for a given **Project**, which will be converted into a **Trace**\n\nNOTE: This endpoint *requires* that the sender use a custom HTTP header defining the Memfault Project Client Key. \n\n`Memfault-Project-Key: 87c2ca9d3ec148ac82034fc2724ff614`\n\n<hr>\n\n#### Return Value\n\nA `202 Accepted` response and `Location` header for which to check the status of the *Task*.\n\n```\nLocation: https://api.memfault.com/api/v0/queue/bb992299-f64a-4d47-8372-7e16aff9fdc3\n```",
                "operationId": "UploadCoredump",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "application/octet-stream"
                        }
                    },
                    {
                        "name": "Memfault-Project-Key",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": ["File"],
                                "type": "object",
                                "properties": {
                                    "File": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "202": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "example": {}
                                },
                                "example": {}
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v0/queue/{task_Id}": {
            "get": {
                "tags": ["Tasks"],
                "summary": "Get Task Status",
                "description": "Get the status of the given *Task*\n\n<hr>\n\n#### Return Value\n\n```\n{\n  \"status\": \"SUCCESS\"\n}\n```",
                "operationId": "GetTaskStatus",
                "parameters": [
                    {
                        "name": "task_Id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        }
    },
    "components": {
        "schemas": {
            "Me": {
                "title": "Me",
                "required": [
                    "created_date",
                    "email",
                    "id",
                    "name",
                    "organizations",
                    "updated_date"
                ],
                "type": "object",
                "properties": {
                    "created_date": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Organization"
                        },
                        "description": ""
                    },
                    "updated_date": {
                        "type": "string"
                    }
                },
                "example": {
                    "created_date": "2019-05-22T04:33:21.472212+00:00",
                    "email": "john@memfault.com",
                    "id": 1,
                    "name": "John",
                    "organizations": [
                        {
                            "id": 1,
                            "name": "Acme, Inc.",
                            "slug": "acme-inc"
                        }
                    ],
                    "updated_date": "2019-05-22T04:33:21.483559+00:00"
                }
            },
            "Organization": {
                "title": "Organization",
                "required": ["id", "name", "slug"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": 1,
                    "name": "Acme, Inc.",
                    "slug": "acme-inc"
                }
            },
            "GenerateUserAPIKey": {
                "title": "GenerateUserAPIKey",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data"
                    }
                },
                "example": {
                    "data": {
                        "api_key": "dbdd9aa9f9e148b5bc1a1cc828bb1d95"
                    }
                }
            },
            "Data": {
                "title": "Data",
                "required": ["api_key"],
                "type": "object",
                "properties": {
                    "api_key": {
                        "type": "string"
                    }
                },
                "example": {
                    "api_key": "dbdd9aa9f9e148b5bc1a1cc828bb1d95"
                }
            },
            "GetUserAPIKey": {
                "title": "GetUserAPIKey",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data"
                    }
                },
                "example": {
                    "data": {
                        "api_key": "dbdd9aa9f9e148b5bc1a1cc828bb1d95"
                    }
                }
            },
            "CreateaProject": {
                "title": "CreateaProject",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data2"
                    }
                },
                "example": {
                    "data": {
                        "api_key": "b8e7e2c93e944440b4245e78c9b3e082",
                        "count_devices": 0,
                        "created_date": "2019-05-21T21:08:54.32353+00:00",
                        "id": 13,
                        "name": "Smart Sink",
                        "os": "FreeRTOS",
                        "platform": "nRF52",
                        "slug": "smart-sink",
                        "updated_date": "2019-05-21T21:08:54.396858+00:00"
                    }
                }
            },
            "Data2": {
                "title": "Data2",
                "required": [
                    "api_key",
                    "count_devices",
                    "created_date",
                    "id",
                    "name",
                    "os",
                    "platform",
                    "slug",
                    "updated_date"
                ],
                "type": "object",
                "properties": {
                    "api_key": {
                        "type": "string"
                    },
                    "count_devices": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_date": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "updated_date": {
                        "type": "string"
                    }
                },
                "example": {
                    "api_key": "b8e7e2c93e944440b4245e78c9b3e082",
                    "count_devices": 0,
                    "created_date": "2019-05-21T21:08:54.32353+00:00",
                    "id": 13,
                    "name": "Smart Sink",
                    "os": "FreeRTOS",
                    "platform": "nRF52",
                    "slug": "smart-sink",
                    "updated_date": "2019-05-21T21:08:54.396858+00:00"
                }
            },
            "ListProjects": {
                "title": "ListProjects",
                "required": ["data", "paging"],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Data2"
                        },
                        "description": ""
                    },
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    }
                },
                "example": {
                    "data": [
                        {
                            "api_key": "b8e7e2c93e944440b4245e78c9b3e082",
                            "count_devices": 0,
                            "created_date": "2019-05-21T21:08:54.32353+00:00",
                            "id": 13,
                            "name": "Smart Sink",
                            "os": "FreeRTOS",
                            "platform": "nRF52",
                            "slug": "smart-sink",
                            "updated_date": "2019-05-21T21:08:54.396858+00:00"
                        }
                    ],
                    "paging": {
                        "item_count": 1,
                        "page": 1,
                        "page_count": 1,
                        "per_page": 100,
                        "total_count": 1
                    }
                }
            },
            "Paging": {
                "title": "Paging",
                "required": [
                    "item_count",
                    "page",
                    "page_count",
                    "per_page",
                    "total_count"
                ],
                "type": "object",
                "properties": {
                    "item_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "page_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "per_page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "example": {
                    "item_count": 1,
                    "page": 1,
                    "page_count": 1,
                    "per_page": 100,
                    "total_count": 1
                }
            },
            "RetrieveProject": {
                "title": "RetrieveProject",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data2"
                    }
                },
                "example": {
                    "data": {
                        "api_key": "b8e7e2c93e944440b4245e78c9b3e082",
                        "count_devices": 0,
                        "created_date": "2019-05-21T21:08:54.32353+00:00",
                        "id": 13,
                        "name": "Smart Sink",
                        "os": "FreeRTOS",
                        "platform": "nRF52",
                        "slug": "smart-sink",
                        "updated_date": "2019-05-21T21:08:54.396858+00:00"
                    }
                }
            },
            "UpdateProject": {
                "title": "UpdateProject",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data2"
                    }
                },
                "example": {
                    "data": {
                        "api_key": "b8e7e2c93e944440b4245e78c9b3e082",
                        "count_devices": 0,
                        "created_date": "2019-05-21T21:08:54.32353+00:00",
                        "id": 13,
                        "name": "Smart Sink",
                        "os": "FreeRTOS-AWS",
                        "platform": "nRF52",
                        "slug": "smart-sink",
                        "updated_date": "2019-05-21T21:09:41.48637+00:00"
                    }
                }
            },
            "GetProjectClientKey": {
                "title": "GetProjectClientKey",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data"
                    }
                },
                "example": {
                    "data": {
                        "api_key": "b8e7e2c93e944440b4245e78c9b3e082"
                    }
                }
            },
            "RefreshProjectClientKey": {
                "title": "RefreshProjectClientKey",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data"
                    }
                },
                "example": {
                    "data": {
                        "api_key": "b13aa6db4cc54709957be890eb822221"
                    }
                }
            },
            "CreateaRelease": {
                "title": "CreateaRelease",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data8"
                    }
                },
                "example": {
                    "data": {
                        "artifacts": [],
                        "count_devices": 0,
                        "created_date": "2019-05-21T21:15:08.593624+00:00",
                        "extra_info": null,
                        "id": 113,
                        "min_version": "",
                        "notes": "",
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "updated_date": "2019-05-21T21:15:08.596886+00:00",
                        "version": "1.0.0"
                    }
                }
            },
            "Data8": {
                "title": "Data8",
                "required": [
                    "artifacts",
                    "count_devices",
                    "created_date",
                    "id",
                    "min_version",
                    "notes",
                    "revision",
                    "updated_date",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "artifacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ""
                    },
                    "count_devices": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_date": {
                        "type": "string"
                    },
                    "extra_info": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "min_version": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "revision": {
                        "type": "string"
                    },
                    "updated_date": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "example": {
                    "artifacts": [],
                    "count_devices": 0,
                    "created_date": "2019-05-21T21:15:08.593624+00:00",
                    "extra_info": null,
                    "id": 113,
                    "min_version": "",
                    "notes": "",
                    "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                    "updated_date": "2019-05-21T21:15:08.596886+00:00",
                    "version": "1.0.0"
                }
            },
            "ListReleases": {
                "title": "ListReleases",
                "required": ["data", "paging"],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Data8"
                        },
                        "description": ""
                    },
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    }
                },
                "example": {
                    "data": [
                        {
                            "artifacts": [],
                            "count_devices": 0,
                            "created_date": "2019-05-21T21:15:08.593624+00:00",
                            "extra_info": null,
                            "id": 113,
                            "min_version": "",
                            "notes": "",
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "updated_date": "2019-05-21T21:15:08.596886+00:00",
                            "version": "1.0.0"
                        }
                    ],
                    "paging": {
                        "item_count": 1,
                        "page": 1,
                        "page_count": 1,
                        "per_page": 100,
                        "total_count": 1
                    }
                }
            },
            "RetrieveaRelease": {
                "title": "RetrieveaRelease",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data8"
                    }
                },
                "example": {
                    "data": {
                        "artifacts": [],
                        "count_devices": 0,
                        "created_date": "2019-05-21T21:15:08.593624+00:00",
                        "extra_info": null,
                        "id": 113,
                        "min_version": "",
                        "notes": "",
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "updated_date": "2019-05-21T21:15:08.596886+00:00",
                        "version": "1.0.0"
                    }
                }
            },
            "UpdateaRelease": {
                "title": "UpdateaRelease",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data8"
                    }
                },
                "example": {
                    "data": {
                        "artifacts": [],
                        "count_devices": 0,
                        "created_date": "2019-05-21T21:26:55.207463+00:00",
                        "extra_info": null,
                        "id": 7,
                        "min_version": "",
                        "notes": "",
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "updated_date": "2019-05-21T21:26:55.209415+00:00",
                        "version": "1.0.0"
                    }
                }
            },
            "CreateaCohort": {
                "title": "CreateaCohort",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data12"
                    }
                },
                "example": {
                    "data": {
                        "count_devices": 0,
                        "created_date": "2019-05-21T21:55:34.349088+00:00",
                        "id": 7,
                        "last_deployment": null,
                        "name": "Internal Channel",
                        "slug": "internal",
                        "updated_date": "2019-05-21T21:55:34.349106+00:00"
                    }
                }
            },
            "Data12": {
                "title": "Data12",
                "required": [
                    "count_devices",
                    "created_date",
                    "id",
                    "name",
                    "slug",
                    "updated_date"
                ],
                "type": "object",
                "properties": {
                    "count_devices": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_date": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "last_deployment": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "updated_date": {
                        "type": "string"
                    }
                },
                "example": {
                    "count_devices": 0,
                    "created_date": "2019-05-21T21:55:34.349088+00:00",
                    "id": 7,
                    "last_deployment": null,
                    "name": "Internal Channel",
                    "slug": "internal",
                    "updated_date": "2019-05-21T21:55:34.349106+00:00"
                }
            },
            "ListCohorts": {
                "title": "ListCohorts",
                "required": ["data", "paging"],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Data12"
                        },
                        "description": ""
                    },
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    }
                },
                "example": {
                    "data": [
                        {
                            "count_devices": 0,
                            "created_date": "2019-05-21T21:26:48.477897+00:00",
                            "id": 5,
                            "last_deployment": null,
                            "name": "default",
                            "slug": "default",
                            "updated_date": "2019-05-21T21:26:48.477903+00:00"
                        },
                        {
                            "count_devices": 0,
                            "created_date": "2019-05-21T21:55:34.349088+00:00",
                            "id": 7,
                            "last_deployment": null,
                            "name": "Internal Channel",
                            "slug": "internal",
                            "updated_date": "2019-05-21T21:55:34.349106+00:00"
                        }
                    ],
                    "paging": {
                        "item_count": 2,
                        "page": 1,
                        "page_count": 1,
                        "per_page": 100,
                        "total_count": 2
                    }
                }
            },
            "RetrieveaCohort": {
                "title": "RetrieveaCohort",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data12"
                    }
                },
                "example": {
                    "data": {
                        "count_devices": 0,
                        "created_date": "2019-05-21T21:55:34.349088+00:00",
                        "id": 7,
                        "last_deployment": null,
                        "name": "Internal Channel",
                        "slug": "internal",
                        "updated_date": "2019-05-21T21:55:34.349106+00:00"
                    }
                }
            },
            "UpdateaCohort": {
                "title": "UpdateaCohort",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data12"
                    }
                },
                "example": {
                    "data": {
                        "count_devices": 0,
                        "created_date": "2019-05-21T21:55:34.349088+00:00",
                        "id": 7,
                        "last_deployment": null,
                        "name": "Internal Group",
                        "slug": "internal",
                        "updated_date": "2019-05-21T22:03:48.302371+00:00"
                    }
                }
            },
            "ListDevicesinaCohort": {
                "title": "ListDevicesinaCohort",
                "required": ["data", "paging"],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Data16"
                        },
                        "description": ""
                    },
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    }
                },
                "example": {
                    "data": [
                        {
                            "cohort": {
                                "count_devices": 1,
                                "id": 7,
                                "name": "Internal Group",
                                "slug": "internal"
                            },
                            "created_date": "2019-05-21T22:08:17.289061+00:00",
                            "device_serial": "ABCD1234",
                            "hardware_version": "evt",
                            "id": 35,
                            "last_seen": null,
                            "last_seen_release": null,
                            "latest_install": null,
                            "latest_trace": null,
                            "owner_ref": "user1234",
                            "updated_date": "2019-05-21T22:11:55.900182+00:00"
                        }
                    ],
                    "paging": {
                        "item_count": 1,
                        "page": 1,
                        "page_count": 1,
                        "per_page": 100,
                        "total_count": 1
                    }
                }
            },
            "Data16": {
                "title": "Data16",
                "required": [
                    "cohort",
                    "created_date",
                    "device_serial",
                    "hardware_version",
                    "id",
                    "owner_ref",
                    "updated_date"
                ],
                "type": "object",
                "properties": {
                    "cohort": {
                        "$ref": "#/components/schemas/Cohort"
                    },
                    "created_date": {
                        "type": "string"
                    },
                    "device_serial": {
                        "type": "string"
                    },
                    "hardware_version": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "last_seen": {
                        "type": "string",
                        "nullable": true
                    },
                    "last_seen_release": {
                        "type": "string",
                        "nullable": true
                    },
                    "latest_install": {
                        "type": "string",
                        "nullable": true
                    },
                    "latest_trace": {
                        "type": "string",
                        "nullable": true
                    },
                    "owner_ref": {
                        "type": "string"
                    },
                    "updated_date": {
                        "type": "string"
                    }
                },
                "example": {
                    "cohort": {
                        "count_devices": 1,
                        "id": 7,
                        "name": "Internal Group",
                        "slug": "internal"
                    },
                    "created_date": "2019-05-21T22:08:17.289061+00:00",
                    "device_serial": "ABCD1234",
                    "hardware_version": "evt",
                    "id": 35,
                    "last_seen": null,
                    "last_seen_release": null,
                    "latest_install": null,
                    "latest_trace": null,
                    "owner_ref": "user1234",
                    "updated_date": "2019-05-21T22:11:55.900182+00:00"
                }
            },
            "Cohort": {
                "title": "Cohort",
                "required": ["count_devices", "id", "name", "slug"],
                "type": "object",
                "properties": {
                    "count_devices": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "example": {
                    "count_devices": 1,
                    "id": 7,
                    "name": "Internal Group",
                    "slug": "internal"
                }
            },
            "CreateaDeployment": {
                "title": "CreateaDeployment",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data17"
                    }
                },
                "example": {
                    "data": {
                        "cohort": {
                            "count_devices": 1,
                            "id": 7,
                            "name": "Internal Group",
                            "slug": "internal"
                        },
                        "created_date": "2019-05-21T22:49:23.851977+00:00",
                        "deployed_date": "2019-05-21T22:49:23.851977+00:00",
                        "deployer": {
                            "email": "tyler@memfault.com",
                            "id": 1,
                            "name": "John"
                        },
                        "extra_info": null,
                        "id": 9,
                        "release": {
                            "id": 8,
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "version": "1.0.0"
                        },
                        "rollout_percent": 0,
                        "status": "done",
                        "type": "normal",
                        "updated_date": "2019-05-21T22:49:23.851983+00:00"
                    }
                }
            },
            "Data17": {
                "title": "Data17",
                "required": [
                    "cohort",
                    "created_date",
                    "deployed_date",
                    "deployer",
                    "id",
                    "release",
                    "rollout_percent",
                    "status",
                    "type",
                    "updated_date"
                ],
                "type": "object",
                "properties": {
                    "cohort": {
                        "$ref": "#/components/schemas/Cohort"
                    },
                    "created_date": {
                        "type": "string"
                    },
                    "deployed_date": {
                        "type": "string"
                    },
                    "deployer": {
                        "$ref": "#/components/schemas/Deployer"
                    },
                    "extra_info": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "release": {
                        "$ref": "#/components/schemas/Release"
                    },
                    "rollout_percent": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_date": {
                        "type": "string"
                    }
                },
                "example": {
                    "cohort": {
                        "count_devices": 1,
                        "id": 7,
                        "name": "Internal Group",
                        "slug": "internal"
                    },
                    "created_date": "2019-05-21T22:49:23.851977+00:00",
                    "deployed_date": "2019-05-21T22:49:23.851977+00:00",
                    "deployer": {
                        "email": "tyler@memfault.com",
                        "id": 1,
                        "name": "John"
                    },
                    "extra_info": null,
                    "id": 9,
                    "release": {
                        "id": 8,
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "version": "1.0.0"
                    },
                    "rollout_percent": 0,
                    "status": "done",
                    "type": "normal",
                    "updated_date": "2019-05-21T22:49:23.851983+00:00"
                }
            },
            "Deployer": {
                "title": "Deployer",
                "required": ["email", "id", "name"],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "example": {
                    "email": "tyler@memfault.com",
                    "id": 1,
                    "name": "John"
                }
            },
            "Release": {
                "title": "Release",
                "required": ["id", "revision", "version"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "revision": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": 8,
                    "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                    "version": "1.0.0"
                }
            },
            "ListDeployments": {
                "title": "ListDeployments",
                "required": ["data", "paging"],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Data17"
                        },
                        "description": ""
                    },
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    }
                },
                "example": {
                    "data": [
                        {
                            "cohort": {
                                "count_devices": 1,
                                "id": 7,
                                "name": "Internal Group",
                                "slug": "internal"
                            },
                            "created_date": "2019-05-21T22:49:23.851977+00:00",
                            "deployed_date": "2019-05-21T22:49:23.851977+00:00",
                            "deployer": {
                                "email": "tyler@memfault.com",
                                "id": 1,
                                "name": "John"
                            },
                            "extra_info": null,
                            "id": 9,
                            "release": {
                                "id": 8,
                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                "version": "1.0.0"
                            },
                            "rollout_percent": 0,
                            "status": "done",
                            "type": "normal",
                            "updated_date": "2019-05-21T22:49:23.851983+00:00"
                        }
                    ],
                    "paging": {
                        "item_count": 1,
                        "page": 1,
                        "page_count": 1,
                        "per_page": 100,
                        "total_count": 1
                    }
                }
            },
            "RetrieveaDeployment": {
                "title": "RetrieveaDeployment",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data17"
                    }
                },
                "example": {
                    "data": {
                        "cohort": {
                            "count_devices": 1,
                            "id": 7,
                            "name": "Internal Group",
                            "slug": "internal"
                        },
                        "created_date": "2019-05-21T22:49:23.851977+00:00",
                        "deployed_date": "2019-05-21T22:49:23.851977+00:00",
                        "deployer": {
                            "email": "tyler@memfault.com",
                            "id": 1,
                            "name": "John"
                        },
                        "extra_info": null,
                        "id": 9,
                        "release": {
                            "id": 8,
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "version": "1.0.0"
                        },
                        "rollout_percent": 0,
                        "status": "done",
                        "type": "normal",
                        "updated_date": "2019-05-21T22:49:23.851983+00:00"
                    }
                }
            },
            "UpdateaDeployment": {
                "title": "UpdateaDeployment",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data20"
                    }
                },
                "example": {
                    "data": {
                        "cohort": {
                            "count_devices": 1,
                            "id": 7,
                            "name": "Internal Group",
                            "slug": "internal"
                        },
                        "created_date": "2019-05-21T22:49:23.851977+00:00",
                        "deployed_date": "2019-05-21T22:49:23.851977+00:00",
                        "deployer": {
                            "email": "tyler@memfault.com",
                            "id": 1,
                            "name": "John"
                        },
                        "extra_info": {
                            "ci": "jenkins"
                        },
                        "id": 9,
                        "release": {
                            "id": 8,
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "version": "1.0.0"
                        },
                        "rollout_percent": 0,
                        "status": "done",
                        "type": "normal",
                        "updated_date": "2019-05-21T22:50:57.591108+00:00"
                    }
                }
            },
            "Data20": {
                "title": "Data20",
                "required": [
                    "cohort",
                    "created_date",
                    "deployed_date",
                    "deployer",
                    "extra_info",
                    "id",
                    "release",
                    "rollout_percent",
                    "status",
                    "type",
                    "updated_date"
                ],
                "type": "object",
                "properties": {
                    "cohort": {
                        "$ref": "#/components/schemas/Cohort"
                    },
                    "created_date": {
                        "type": "string"
                    },
                    "deployed_date": {
                        "type": "string"
                    },
                    "deployer": {
                        "$ref": "#/components/schemas/Deployer"
                    },
                    "extra_info": {
                        "$ref": "#/components/schemas/ExtraInfo"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "release": {
                        "$ref": "#/components/schemas/Release"
                    },
                    "rollout_percent": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updated_date": {
                        "type": "string"
                    }
                },
                "example": {
                    "cohort": {
                        "count_devices": 1,
                        "id": 7,
                        "name": "Internal Group",
                        "slug": "internal"
                    },
                    "created_date": "2019-05-21T22:49:23.851977+00:00",
                    "deployed_date": "2019-05-21T22:49:23.851977+00:00",
                    "deployer": {
                        "email": "tyler@memfault.com",
                        "id": 1,
                        "name": "John"
                    },
                    "extra_info": {
                        "ci": "jenkins"
                    },
                    "id": 9,
                    "release": {
                        "id": 8,
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "version": "1.0.0"
                    },
                    "rollout_percent": 0,
                    "status": "done",
                    "type": "normal",
                    "updated_date": "2019-05-21T22:50:57.591108+00:00"
                }
            },
            "ExtraInfo": {
                "title": "ExtraInfo",
                "required": ["ci"],
                "type": "object",
                "properties": {
                    "ci": {
                        "type": "string"
                    }
                },
                "example": {
                    "ci": "jenkins"
                }
            },
            "CreateSingleDevice": {
                "title": "CreateSingleDevice",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data16"
                    }
                },
                "example": {
                    "data": {
                        "cohort": {
                            "count_devices": 1,
                            "id": 7,
                            "name": "Internal Group",
                            "slug": "internal"
                        },
                        "created_date": "2019-05-21T22:08:17.289061+00:00",
                        "device_serial": "ABCD1234",
                        "hardware_version": "evt",
                        "id": 35,
                        "last_seen": null,
                        "last_seen_release": null,
                        "latest_install": null,
                        "latest_trace": null,
                        "owner_ref": "",
                        "updated_date": "2019-05-21T22:08:17.296289+00:00"
                    }
                }
            },
            "ListDevices": {
                "title": "ListDevices",
                "required": ["data", "paging"],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Data16"
                        },
                        "description": ""
                    },
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    }
                },
                "example": {
                    "data": [
                        {
                            "cohort": {
                                "count_devices": 1,
                                "id": 7,
                                "name": "Internal Group",
                                "slug": "internal"
                            },
                            "created_date": "2019-05-21T22:08:17.289061+00:00",
                            "device_serial": "ABCD1234",
                            "hardware_version": "evt",
                            "id": 35,
                            "last_seen": null,
                            "last_seen_release": null,
                            "latest_install": null,
                            "latest_trace": null,
                            "owner_ref": "",
                            "updated_date": "2019-05-21T22:08:17.296289+00:00"
                        }
                    ],
                    "paging": {
                        "item_count": 1,
                        "page": 1,
                        "page_count": 1,
                        "per_page": 100,
                        "total_count": 1
                    }
                }
            },
            "RetrieveaDevice": {
                "title": "RetrieveaDevice",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data16"
                    }
                },
                "example": {
                    "data": {
                        "cohort": {
                            "count_devices": 1,
                            "id": 7,
                            "name": "Internal Group",
                            "slug": "internal"
                        },
                        "created_date": "2019-05-21T22:08:17.289061+00:00",
                        "device_serial": "ABCD1234",
                        "hardware_version": "evt",
                        "id": 35,
                        "last_seen": null,
                        "last_seen_release": null,
                        "latest_install": null,
                        "latest_trace": null,
                        "owner_ref": "user1234",
                        "updated_date": "2019-05-21T22:11:55.900182+00:00"
                    }
                }
            },
            "UpdateaDevice": {
                "title": "UpdateaDevice",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data16"
                    }
                },
                "example": {
                    "data": {
                        "cohort": {
                            "count_devices": 1,
                            "id": 7,
                            "name": "Internal Group",
                            "slug": "internal"
                        },
                        "created_date": "2019-05-21T22:08:17.289061+00:00",
                        "device_serial": "ABCD1234",
                        "hardware_version": "evt",
                        "id": 35,
                        "last_seen": null,
                        "last_seen_release": null,
                        "latest_install": null,
                        "latest_trace": null,
                        "owner_ref": "user1234",
                        "updated_date": "2019-05-21T22:11:55.900182+00:00"
                    }
                }
            },
            "UploadEvents-InvalidSchema": {
                "title": "UploadEvents-InvalidSchema",
                "required": ["error"],
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/Error"
                    }
                },
                "example": {
                    "error": {
                        "code": 1000,
                        "http_code": 400,
                        "message": {
                            "0": {
                                "event_info": {
                                    "metrics": {
                                        "uptime_s": {
                                            "value": ["Not a valid integer."]
                                        }
                                    }
                                }
                            }
                        },
                        "type": "InvalidUsageError"
                    }
                }
            },
            "Error": {
                "title": "Error",
                "required": ["code", "http_code", "message", "type"],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "http_code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/generatedObject"
                        }
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "example": {
                    "code": 1000,
                    "http_code": 400,
                    "message": {
                        "0": {
                            "event_info": {
                                "metrics": {
                                    "uptime_s": {
                                        "value": ["Not a valid integer."]
                                    }
                                }
                            }
                        }
                    },
                    "type": "InvalidUsageError"
                }
            },
            "generatedObject": {
                "title": "generatedObject",
                "required": ["event_info"],
                "type": "object",
                "properties": {
                    "event_info": {
                        "$ref": "#/components/schemas/EventInfo"
                    }
                },
                "example": {
                    "event_info": {
                        "metrics": {
                            "uptime_s": {
                                "value": ["Not a valid integer."]
                            }
                        }
                    }
                }
            },
            "EventInfo": {
                "title": "EventInfo",
                "required": ["metrics"],
                "type": "object",
                "properties": {
                    "metrics": {
                        "$ref": "#/components/schemas/Metrics"
                    }
                },
                "example": {
                    "metrics": {
                        "uptime_s": {
                            "value": ["Not a valid integer."]
                        }
                    }
                }
            },
            "Metrics": {
                "title": "Metrics",
                "required": ["uptime_s"],
                "type": "object",
                "properties": {
                    "uptime_s": {
                        "$ref": "#/components/schemas/UptimeS"
                    }
                },
                "example": {
                    "uptime_s": {
                        "value": ["Not a valid integer."]
                    }
                }
            },
            "UptimeS": {
                "title": "UptimeS",
                "required": ["value"],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ""
                    }
                },
                "example": {
                    "value": ["Not a valid integer."]
                }
            },
            "ListEvents": {
                "title": "ListEvents",
                "required": ["data", "paging"],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Data25"
                        },
                        "description": ""
                    },
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    }
                },
                "example": {
                    "data": [
                        {
                            "captured_date": "2019-05-21T22:19:57.782341+00:00",
                            "created_date": "2019-05-21T22:19:57.782328+00:00",
                            "device": {
                                "device_serial": "ABCD1234",
                                "hardware_version": "evt",
                                "id": 35
                            },
                            "event_info": {
                                "lr": 226574,
                                "pc": 226689,
                                "reason": 32769,
                                "sp": 6712
                            },
                            "id": 3869,
                            "received_date": "2019-05-21T22:19:57.782338+00:00",
                            "release": {
                                "id": 8,
                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                "version": "1.0.0"
                            },
                            "type": "trace",
                            "user_info": null
                        }
                    ],
                    "paging": {
                        "item_count": 1,
                        "page": 1,
                        "page_count": 1,
                        "per_page": 100,
                        "total_count": 1
                    }
                }
            },
            "Data25": {
                "title": "Data25",
                "required": [
                    "captured_date",
                    "created_date",
                    "device",
                    "event_info",
                    "id",
                    "received_date",
                    "release",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "captured_date": {
                        "type": "string"
                    },
                    "created_date": {
                        "type": "string"
                    },
                    "device": {
                        "$ref": "#/components/schemas/Device"
                    },
                    "event_info": {
                        "$ref": "#/components/schemas/EventInfo1"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "received_date": {
                        "type": "string"
                    },
                    "release": {
                        "$ref": "#/components/schemas/Release"
                    },
                    "type": {
                        "type": "string"
                    },
                    "user_info": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "example": {
                    "captured_date": "2019-05-21T22:19:57.782341+00:00",
                    "created_date": "2019-05-21T22:19:57.782328+00:00",
                    "device": {
                        "device_serial": "ABCD1234",
                        "hardware_version": "evt",
                        "id": 35
                    },
                    "event_info": {
                        "lr": 226574,
                        "pc": 226689,
                        "reason": 32769,
                        "sp": 6712
                    },
                    "id": 3869,
                    "received_date": "2019-05-21T22:19:57.782338+00:00",
                    "release": {
                        "id": 8,
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "version": "1.0.0"
                    },
                    "type": "trace",
                    "user_info": null
                }
            },
            "Device": {
                "title": "Device",
                "required": ["device_serial", "hardware_version", "id"],
                "type": "object",
                "properties": {
                    "device_serial": {
                        "type": "string"
                    },
                    "hardware_version": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "example": {
                    "device_serial": "ABCD1234",
                    "hardware_version": "evt",
                    "id": 35
                }
            },
            "EventInfo1": {
                "title": "EventInfo1",
                "required": ["lr", "pc", "reason", "sp"],
                "type": "object",
                "properties": {
                    "lr": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pc": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "reason": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sp": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "example": {
                    "lr": 226574,
                    "pc": 226689,
                    "reason": 32769,
                    "sp": 6712
                }
            },
            "RetrieveanEvent": {
                "title": "RetrieveanEvent",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data25"
                    }
                },
                "example": {
                    "data": {
                        "captured_date": "2019-05-21T22:19:57.782341+00:00",
                        "created_date": "2019-05-21T22:19:57.782328+00:00",
                        "device": {
                            "device_serial": "ABCD1234",
                            "hardware_version": "evt",
                            "id": 35
                        },
                        "event_info": {
                            "lr": 226574,
                            "pc": 226689,
                            "reason": 32769,
                            "sp": 6712
                        },
                        "id": 3869,
                        "received_date": "2019-05-21T22:19:57.782338+00:00",
                        "release": {
                            "id": 8,
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "version": "1.0.0"
                        },
                        "type": "trace",
                        "user_info": null
                    }
                }
            },
            "ListIssues": {
                "title": "ListIssues",
                "required": ["data", "paging"],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Data27"
                        },
                        "description": ""
                    },
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    }
                },
                "example": {
                    "data": [
                        {
                            "counts": [
                                10,
                                11,
                                15,
                                10,
                                10,
                                11,
                                12,
                                6,
                                5,
                                15,
                                11,
                                10,
                                13,
                                12,
                                15,
                                5,
                                4,
                                10,
                                7,
                                5,
                                4,
                                11,
                                15,
                                14
                            ],
                            "created_date": "2019-05-21T22:32:58.168618+00:00",
                            "device_count": 1,
                            "distribution": {
                                "hardware_version": [
                                    {
                                        "count": 13,
                                        "version": "qq_pvt"
                                    },
                                    {
                                        "count": 9,
                                        "version": "xx_evt"
                                    }
                                ],
                                "sw_version": [
                                    {
                                        "count": 13,
                                        "version": "0.9"
                                    },
                                    {
                                        "count": 7,
                                        "version": "1.0.0"
                                    },
                                    {
                                        "count": 9,
                                        "version": "1.0.1"
                                    }
                                ]
                            },
                            "first_release": {
                                "id": 8,
                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                "version": "1.0.0"
                            },
                            "first_seen": "2019-05-21T22:32:57.801998+00:00",
                            "id": 11,
                            "last_release": {
                                "id": 8,
                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                "version": "1.0.0"
                            },
                            "last_seen": "2019-05-21T22:32:57.801998+00:00",
                            "last_trace": {
                                "captured_date": "2019-05-21T22:32:57.801998+00:00",
                                "context": "",
                                "created_date": "2019-05-21T22:32:57.801961+00:00",
                                "device": {
                                    "device_serial": "ABCD1234",
                                    "hardware_version": "evt",
                                    "id": 35
                                },
                                "entries": {
                                    "threads": [
                                        {
                                            "crashed": false,
                                            "current": true,
                                            "registers": [],
                                            "reporting": false,
                                            "stacktrace": [
                                                {
                                                    "address": 226689,
                                                    "context": [],
                                                    "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                                                    "function": "memfault_reboot_tracking_mark_crash",
                                                    "index": 0,
                                                    "lineno": 85
                                                },
                                                {
                                                    "address": 226574,
                                                    "context": [],
                                                    "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c",
                                                    "function": "memfault_reboot_tracking_assert_handler",
                                                    "index": 1,
                                                    "lineno": 171
                                                }
                                            ],
                                            "state": "unknown",
                                            "tid": 1
                                        }
                                    ]
                                },
                                "id": 20,
                                "message": "",
                                "reason": "Assert",
                                "received_date": "2019-05-21T22:32:57.801994+00:00",
                                "release": {
                                    "id": 8,
                                    "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                    "version": "1.0.0"
                                },
                                "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                                "source_type": "event",
                                "title": "Assert at memfault_reboot_tracking_assert_handler"
                            },
                            "message": "",
                            "resolution": null,
                            "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                            "status": "open",
                            "title": "Assert at memfault_reboot_tracking_assert_handler",
                            "trace_count": 1,
                            "updated_date": "2019-05-21T22:32:58.168622+00:00"
                        }
                    ],
                    "paging": {
                        "item_count": 1,
                        "page": 1,
                        "page_count": 1,
                        "per_page": 100,
                        "total_count": 1
                    }
                }
            },
            "Data27": {
                "title": "Data27",
                "required": [
                    "counts",
                    "created_date",
                    "device_count",
                    "distribution",
                    "first_release",
                    "first_seen",
                    "id",
                    "last_release",
                    "last_seen",
                    "last_trace",
                    "message",
                    "signature",
                    "status",
                    "title",
                    "trace_count",
                    "updated_date"
                ],
                "type": "object",
                "properties": {
                    "counts": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": ""
                    },
                    "created_date": {
                        "type": "string"
                    },
                    "device_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "distribution": {
                        "$ref": "#/components/schemas/Distribution"
                    },
                    "first_release": {
                        "$ref": "#/components/schemas/FirstRelease"
                    },
                    "first_seen": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "last_release": {
                        "$ref": "#/components/schemas/LastRelease"
                    },
                    "last_seen": {
                        "type": "string"
                    },
                    "last_trace": {
                        "$ref": "#/components/schemas/LastTrace"
                    },
                    "message": {
                        "type": "string"
                    },
                    "resolution": {
                        "type": "string",
                        "nullable": true
                    },
                    "signature": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "trace_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "updated_date": {
                        "type": "string"
                    }
                },
                "example": {
                    "counts": [
                        10,
                        11,
                        15,
                        10,
                        10,
                        11,
                        12,
                        6,
                        5,
                        15,
                        11,
                        10,
                        13,
                        12,
                        15,
                        5,
                        4,
                        10,
                        7,
                        5,
                        4,
                        11,
                        15,
                        14
                    ],
                    "created_date": "2019-05-21T22:32:58.168618+00:00",
                    "device_count": 1,
                    "distribution": {
                        "hardware_version": [
                            {
                                "count": 13,
                                "version": "qq_pvt"
                            },
                            {
                                "count": 9,
                                "version": "xx_evt"
                            }
                        ],
                        "sw_version": [
                            {
                                "count": 13,
                                "version": "0.9"
                            },
                            {
                                "count": 7,
                                "version": "1.0.0"
                            },
                            {
                                "count": 9,
                                "version": "1.0.1"
                            }
                        ]
                    },
                    "first_release": {
                        "id": 8,
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "version": "1.0.0"
                    },
                    "first_seen": "2019-05-21T22:32:57.801998+00:00",
                    "id": 11,
                    "last_release": {
                        "id": 8,
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "version": "1.0.0"
                    },
                    "last_seen": "2019-05-21T22:32:57.801998+00:00",
                    "last_trace": {
                        "captured_date": "2019-05-21T22:32:57.801998+00:00",
                        "context": "",
                        "created_date": "2019-05-21T22:32:57.801961+00:00",
                        "device": {
                            "device_serial": "ABCD1234",
                            "hardware_version": "evt",
                            "id": 35
                        },
                        "entries": {
                            "threads": [
                                {
                                    "crashed": false,
                                    "current": true,
                                    "registers": [],
                                    "reporting": false,
                                    "stacktrace": [
                                        {
                                            "address": 226689,
                                            "context": [],
                                            "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                                            "function": "memfault_reboot_tracking_mark_crash",
                                            "index": 0,
                                            "lineno": 85
                                        },
                                        {
                                            "address": 226574,
                                            "context": [],
                                            "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c",
                                            "function": "memfault_reboot_tracking_assert_handler",
                                            "index": 1,
                                            "lineno": 171
                                        }
                                    ],
                                    "state": "unknown",
                                    "tid": 1
                                }
                            ]
                        },
                        "id": 20,
                        "message": "",
                        "reason": "Assert",
                        "received_date": "2019-05-21T22:32:57.801994+00:00",
                        "release": {
                            "id": 8,
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "version": "1.0.0"
                        },
                        "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                        "source_type": "event",
                        "title": "Assert at memfault_reboot_tracking_assert_handler"
                    },
                    "message": "",
                    "resolution": null,
                    "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                    "status": "open",
                    "title": "Assert at memfault_reboot_tracking_assert_handler",
                    "trace_count": 1,
                    "updated_date": "2019-05-21T22:32:58.168622+00:00"
                }
            },
            "Distribution": {
                "title": "Distribution",
                "required": ["hardware_version", "sw_version"],
                "type": "object",
                "properties": {
                    "hardware_version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HardwareVersion"
                        },
                        "description": ""
                    },
                    "sw_version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SwVersion"
                        },
                        "description": ""
                    }
                },
                "example": {
                    "hardware_version": [
                        {
                            "count": 13,
                            "version": "qq_pvt"
                        },
                        {
                            "count": 9,
                            "version": "xx_evt"
                        }
                    ],
                    "sw_version": [
                        {
                            "count": 13,
                            "version": "0.9"
                        },
                        {
                            "count": 7,
                            "version": "1.0.0"
                        },
                        {
                            "count": 9,
                            "version": "1.0.1"
                        }
                    ]
                }
            },
            "HardwareVersion": {
                "title": "HardwareVersion",
                "required": ["count", "version"],
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "example": {
                    "count": 13,
                    "version": "qq_pvt"
                }
            },
            "SwVersion": {
                "title": "SwVersion",
                "required": ["count", "version"],
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "example": {
                    "count": 13,
                    "version": "0.9"
                }
            },
            "FirstRelease": {
                "title": "FirstRelease",
                "required": ["id", "revision", "version"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "revision": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": 8,
                    "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                    "version": "1.0.0"
                }
            },
            "LastRelease": {
                "title": "LastRelease",
                "required": ["id", "revision", "version"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "revision": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": 8,
                    "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                    "version": "1.0.0"
                }
            },
            "LastTrace": {
                "title": "LastTrace",
                "required": [
                    "captured_date",
                    "context",
                    "created_date",
                    "device",
                    "entries",
                    "id",
                    "message",
                    "reason",
                    "received_date",
                    "release",
                    "signature",
                    "source_type",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "captured_date": {
                        "type": "string"
                    },
                    "context": {
                        "type": "string"
                    },
                    "created_date": {
                        "type": "string"
                    },
                    "device": {
                        "$ref": "#/components/schemas/Device"
                    },
                    "entries": {
                        "$ref": "#/components/schemas/Entries"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "received_date": {
                        "type": "string"
                    },
                    "release": {
                        "$ref": "#/components/schemas/Release"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "source_type": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "example": {
                    "captured_date": "2019-05-21T22:32:57.801998+00:00",
                    "context": "",
                    "created_date": "2019-05-21T22:32:57.801961+00:00",
                    "device": {
                        "device_serial": "ABCD1234",
                        "hardware_version": "evt",
                        "id": 35
                    },
                    "entries": {
                        "threads": [
                            {
                                "crashed": false,
                                "current": true,
                                "registers": [],
                                "reporting": false,
                                "stacktrace": [
                                    {
                                        "address": 226689,
                                        "context": [],
                                        "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                                        "function": "memfault_reboot_tracking_mark_crash",
                                        "index": 0,
                                        "lineno": 85
                                    },
                                    {
                                        "address": 226574,
                                        "context": [],
                                        "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c",
                                        "function": "memfault_reboot_tracking_assert_handler",
                                        "index": 1,
                                        "lineno": 171
                                    }
                                ],
                                "state": "unknown",
                                "tid": 1
                            }
                        ]
                    },
                    "id": 20,
                    "message": "",
                    "reason": "Assert",
                    "received_date": "2019-05-21T22:32:57.801994+00:00",
                    "release": {
                        "id": 8,
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "version": "1.0.0"
                    },
                    "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                    "source_type": "event",
                    "title": "Assert at memfault_reboot_tracking_assert_handler"
                }
            },
            "Entries": {
                "title": "Entries",
                "required": ["threads"],
                "type": "object",
                "properties": {
                    "threads": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Thread"
                        },
                        "description": ""
                    }
                },
                "example": {
                    "threads": [
                        {
                            "crashed": false,
                            "current": true,
                            "registers": [],
                            "reporting": false,
                            "stacktrace": [
                                {
                                    "address": 226689,
                                    "context": [],
                                    "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                                    "function": "memfault_reboot_tracking_mark_crash",
                                    "index": 0,
                                    "lineno": 85
                                },
                                {
                                    "address": 226574,
                                    "context": [],
                                    "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c",
                                    "function": "memfault_reboot_tracking_assert_handler",
                                    "index": 1,
                                    "lineno": 171
                                }
                            ],
                            "state": "unknown",
                            "tid": 1
                        }
                    ]
                }
            },
            "Thread": {
                "title": "Thread",
                "required": [
                    "crashed",
                    "current",
                    "registers",
                    "reporting",
                    "stacktrace",
                    "state",
                    "tid"
                ],
                "type": "object",
                "properties": {
                    "crashed": {
                        "type": "boolean"
                    },
                    "current": {
                        "type": "boolean"
                    },
                    "registers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ""
                    },
                    "reporting": {
                        "type": "boolean"
                    },
                    "stacktrace": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Stacktrace"
                        },
                        "description": ""
                    },
                    "state": {
                        "type": "string"
                    },
                    "tid": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "example": {
                    "crashed": false,
                    "current": true,
                    "registers": [],
                    "reporting": false,
                    "stacktrace": [
                        {
                            "address": 226689,
                            "context": [],
                            "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                            "function": "memfault_reboot_tracking_mark_crash",
                            "index": 0,
                            "lineno": 85
                        },
                        {
                            "address": 226574,
                            "context": [],
                            "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c",
                            "function": "memfault_reboot_tracking_assert_handler",
                            "index": 1,
                            "lineno": 171
                        }
                    ],
                    "state": "unknown",
                    "tid": 1
                }
            },
            "Stacktrace": {
                "title": "Stacktrace",
                "required": [
                    "address",
                    "context",
                    "file",
                    "function",
                    "index",
                    "lineno"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "context": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ""
                    },
                    "file": {
                        "type": "string"
                    },
                    "function": {
                        "type": "string"
                    },
                    "index": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lineno": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "example": {
                    "address": 226689,
                    "context": [],
                    "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                    "function": "memfault_reboot_tracking_mark_crash",
                    "index": 0,
                    "lineno": 85
                }
            },
            "RetrieveanIssue": {
                "title": "RetrieveanIssue",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data27"
                    }
                },
                "example": {
                    "data": {
                        "counts": [
                            10,
                            11,
                            15,
                            10,
                            10,
                            11,
                            12,
                            6,
                            5,
                            15,
                            11,
                            10,
                            13,
                            12,
                            15,
                            5,
                            4,
                            10,
                            7,
                            5,
                            4,
                            11,
                            15,
                            14
                        ],
                        "created_date": "2019-05-21T22:32:58.168618+00:00",
                        "device_count": 1,
                        "distribution": {
                            "hardware_version": [
                                {
                                    "count": 13,
                                    "version": "qq_pvt"
                                },
                                {
                                    "count": 9,
                                    "version": "xx_evt"
                                }
                            ],
                            "sw_version": [
                                {
                                    "count": 13,
                                    "version": "0.9"
                                },
                                {
                                    "count": 7,
                                    "version": "1.0.0"
                                },
                                {
                                    "count": 9,
                                    "version": "1.0.1"
                                }
                            ]
                        },
                        "first_release": {
                            "id": 8,
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "version": "1.0.0"
                        },
                        "first_seen": "2019-05-21T22:32:57.801998+00:00",
                        "id": 11,
                        "last_release": {
                            "id": 8,
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "version": "1.0.0"
                        },
                        "last_seen": "2019-05-21T22:32:57.801998+00:00",
                        "last_trace": {
                            "captured_date": "2019-05-21T22:32:57.801998+00:00",
                            "context": "",
                            "created_date": "2019-05-21T22:32:57.801961+00:00",
                            "device": {
                                "device_serial": "ABCD1234",
                                "hardware_version": "evt",
                                "id": 35
                            },
                            "entries": {
                                "threads": [
                                    {
                                        "crashed": false,
                                        "current": true,
                                        "registers": [],
                                        "reporting": false,
                                        "stacktrace": [
                                            {
                                                "address": 226689,
                                                "context": [],
                                                "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                                                "function": "memfault_reboot_tracking_mark_crash",
                                                "index": 0,
                                                "lineno": 85
                                            },
                                            {
                                                "address": 226574,
                                                "context": [],
                                                "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c",
                                                "function": "memfault_reboot_tracking_assert_handler",
                                                "index": 1,
                                                "lineno": 171
                                            }
                                        ],
                                        "state": "unknown",
                                        "tid": 1
                                    }
                                ]
                            },
                            "id": 20,
                            "message": "",
                            "reason": "Assert",
                            "received_date": "2019-05-21T22:32:57.801994+00:00",
                            "release": {
                                "id": 8,
                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                "version": "1.0.0"
                            },
                            "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                            "source_type": "event",
                            "title": "Assert at memfault_reboot_tracking_assert_handler"
                        },
                        "message": "",
                        "resolution": null,
                        "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                        "status": "open",
                        "title": "Assert at memfault_reboot_tracking_assert_handler",
                        "trace_count": 1,
                        "updated_date": "2019-05-21T22:32:58.168622+00:00"
                    }
                }
            },
            "UpdateanIssueRequest": {
                "title": "UpdateanIssueRequest",
                "required": ["status"],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                },
                "example": {
                    "status": "open"
                }
            },
            "UpdateanIssue": {
                "title": "UpdateanIssue",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data29"
                    }
                },
                "example": {
                    "data": {
                        "counts": [
                            10,
                            11,
                            15,
                            10,
                            10,
                            11,
                            12,
                            6,
                            5,
                            15,
                            11,
                            10,
                            13,
                            12,
                            15,
                            5,
                            4,
                            10,
                            7,
                            5,
                            4,
                            11,
                            15,
                            14
                        ],
                        "created_date": "2019-05-21T22:32:58.168618+00:00",
                        "device_count": 1,
                        "distribution": {
                            "hardware_version": [
                                {
                                    "count": 13,
                                    "version": "qq_pvt"
                                },
                                {
                                    "count": 9,
                                    "version": "xx_evt"
                                }
                            ],
                            "sw_version": [
                                {
                                    "count": 13,
                                    "version": "0.9"
                                },
                                {
                                    "count": 7,
                                    "version": "1.0.0"
                                },
                                {
                                    "count": 9,
                                    "version": "1.0.1"
                                }
                            ]
                        },
                        "first_release": {
                            "id": 8,
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "version": "1.0.0"
                        },
                        "first_seen": "2019-05-21T22:32:57.801998+00:00",
                        "id": 11,
                        "last_release": {
                            "id": 8,
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "version": "1.0.0"
                        },
                        "last_seen": "2019-05-21T22:32:57.801998+00:00",
                        "last_trace": {
                            "captured_date": "2019-05-21T22:32:57.801998+00:00",
                            "context": "",
                            "created_date": "2019-05-21T22:32:57.801961+00:00",
                            "device": {
                                "device_serial": "ABCD1234",
                                "hardware_version": "evt",
                                "id": 35
                            },
                            "entries": {
                                "threads": [
                                    {
                                        "crashed": false,
                                        "current": true,
                                        "registers": [],
                                        "reporting": false,
                                        "stacktrace": [
                                            {
                                                "address": 226689,
                                                "context": [],
                                                "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                                                "function": "memfault_reboot_tracking_mark_crash",
                                                "index": 0,
                                                "lineno": 85
                                            },
                                            {
                                                "address": 226574,
                                                "context": [],
                                                "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c",
                                                "function": "memfault_reboot_tracking_assert_handler",
                                                "index": 1,
                                                "lineno": 171
                                            }
                                        ],
                                        "state": "unknown",
                                        "tid": 1
                                    }
                                ]
                            },
                            "id": 20,
                            "message": "",
                            "reason": "Assert",
                            "received_date": "2019-05-21T22:32:57.801994+00:00",
                            "release": {
                                "id": 8,
                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                "version": "1.0.0"
                            },
                            "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                            "source_type": "event",
                            "title": "Assert at memfault_reboot_tracking_assert_handler"
                        },
                        "message": "",
                        "resolution": {
                            "actor": {
                                "email": "tyler@memfault.com",
                                "id": 1,
                                "name": "John"
                            },
                            "timestamp": "2019-05-21T22:44:36.438341+00:00"
                        },
                        "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                        "status": "resolved",
                        "title": "Assert at memfault_reboot_tracking_assert_handler",
                        "trace_count": 1,
                        "updated_date": "2019-05-21T22:44:36.439351+00:00"
                    }
                }
            },
            "Data29": {
                "title": "Data29",
                "required": [
                    "counts",
                    "created_date",
                    "device_count",
                    "distribution",
                    "first_release",
                    "first_seen",
                    "id",
                    "last_release",
                    "last_seen",
                    "last_trace",
                    "message",
                    "resolution",
                    "signature",
                    "status",
                    "title",
                    "trace_count",
                    "updated_date"
                ],
                "type": "object",
                "properties": {
                    "counts": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": ""
                    },
                    "created_date": {
                        "type": "string"
                    },
                    "device_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "distribution": {
                        "$ref": "#/components/schemas/Distribution"
                    },
                    "first_release": {
                        "$ref": "#/components/schemas/FirstRelease"
                    },
                    "first_seen": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "last_release": {
                        "$ref": "#/components/schemas/LastRelease"
                    },
                    "last_seen": {
                        "type": "string"
                    },
                    "last_trace": {
                        "$ref": "#/components/schemas/LastTrace"
                    },
                    "message": {
                        "type": "string"
                    },
                    "resolution": {
                        "$ref": "#/components/schemas/Resolution"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "trace_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "updated_date": {
                        "type": "string"
                    }
                },
                "example": {
                    "counts": [
                        10,
                        11,
                        15,
                        10,
                        10,
                        11,
                        12,
                        6,
                        5,
                        15,
                        11,
                        10,
                        13,
                        12,
                        15,
                        5,
                        4,
                        10,
                        7,
                        5,
                        4,
                        11,
                        15,
                        14
                    ],
                    "created_date": "2019-05-21T22:32:58.168618+00:00",
                    "device_count": 1,
                    "distribution": {
                        "hardware_version": [
                            {
                                "count": 13,
                                "version": "qq_pvt"
                            },
                            {
                                "count": 9,
                                "version": "xx_evt"
                            }
                        ],
                        "sw_version": [
                            {
                                "count": 13,
                                "version": "0.9"
                            },
                            {
                                "count": 7,
                                "version": "1.0.0"
                            },
                            {
                                "count": 9,
                                "version": "1.0.1"
                            }
                        ]
                    },
                    "first_release": {
                        "id": 8,
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "version": "1.0.0"
                    },
                    "first_seen": "2019-05-21T22:32:57.801998+00:00",
                    "id": 11,
                    "last_release": {
                        "id": 8,
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "version": "1.0.0"
                    },
                    "last_seen": "2019-05-21T22:32:57.801998+00:00",
                    "last_trace": {
                        "captured_date": "2019-05-21T22:32:57.801998+00:00",
                        "context": "",
                        "created_date": "2019-05-21T22:32:57.801961+00:00",
                        "device": {
                            "device_serial": "ABCD1234",
                            "hardware_version": "evt",
                            "id": 35
                        },
                        "entries": {
                            "threads": [
                                {
                                    "crashed": false,
                                    "current": true,
                                    "registers": [],
                                    "reporting": false,
                                    "stacktrace": [
                                        {
                                            "address": 226689,
                                            "context": [],
                                            "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_ram_reboot_info_tracking.c",
                                            "function": "memfault_reboot_tracking_mark_crash",
                                            "index": 0,
                                            "lineno": 85
                                        },
                                        {
                                            "address": 226574,
                                            "context": [],
                                            "file": "/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c",
                                            "function": "memfault_reboot_tracking_assert_handler",
                                            "index": 1,
                                            "lineno": 171
                                        }
                                    ],
                                    "state": "unknown",
                                    "tid": 1
                                }
                            ]
                        },
                        "id": 20,
                        "message": "",
                        "reason": "Assert",
                        "received_date": "2019-05-21T22:32:57.801994+00:00",
                        "release": {
                            "id": 8,
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "version": "1.0.0"
                        },
                        "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                        "source_type": "event",
                        "title": "Assert at memfault_reboot_tracking_assert_handler"
                    },
                    "message": "",
                    "resolution": {
                        "actor": {
                            "email": "tyler@memfault.com",
                            "id": 1,
                            "name": "John"
                        },
                        "timestamp": "2019-05-21T22:44:36.438341+00:00"
                    },
                    "signature": "853ff579aabced352bc77dc85f481660545f78e2a27974e62a26b23b71ffe3a2",
                    "status": "resolved",
                    "title": "Assert at memfault_reboot_tracking_assert_handler",
                    "trace_count": 1,
                    "updated_date": "2019-05-21T22:44:36.439351+00:00"
                }
            },
            "Resolution": {
                "title": "Resolution",
                "required": ["actor", "timestamp"],
                "type": "object",
                "properties": {
                    "actor": {
                        "$ref": "#/components/schemas/Actor"
                    },
                    "timestamp": {
                        "type": "string"
                    }
                },
                "example": {
                    "actor": {
                        "email": "tyler@memfault.com",
                        "id": 1,
                        "name": "John"
                    },
                    "timestamp": "2019-05-21T22:44:36.438341+00:00"
                }
            },
            "Actor": {
                "title": "Actor",
                "required": ["email", "id", "name"],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "example": {
                    "email": "tyler@memfault.com",
                    "id": 1,
                    "name": "John"
                }
            },
            "ListInstalls": {
                "title": "ListInstalls",
                "required": ["data", "paging"],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Data30"
                        },
                        "description": ""
                    },
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    }
                },
                "example": {
                    "data": [
                        {
                            "began_at": "2019-05-21T22:19:57.762973+00:00",
                            "created_date": "2019-05-21T22:19:57.762973+00:00",
                            "device": {
                                "device_serial": "ABCD1234",
                                "hardware_version": "evt",
                                "id": 35
                            },
                            "id": 53,
                            "release": {
                                "id": 8,
                                "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                                "version": "1.0.0"
                            },
                            "status": "success",
                            "transitioned_at": "2019-05-21T22:19:57.771497+00:00",
                            "updated_date": "2019-05-21T22:19:57.778679+00:00"
                        }
                    ],
                    "paging": {
                        "item_count": 1,
                        "page": 1,
                        "page_count": 1,
                        "per_page": 100,
                        "total_count": 1
                    }
                }
            },
            "Data30": {
                "title": "Data30",
                "required": [
                    "began_at",
                    "created_date",
                    "device",
                    "id",
                    "release",
                    "status",
                    "transitioned_at",
                    "updated_date"
                ],
                "type": "object",
                "properties": {
                    "began_at": {
                        "type": "string"
                    },
                    "created_date": {
                        "type": "string"
                    },
                    "device": {
                        "$ref": "#/components/schemas/Device"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "release": {
                        "$ref": "#/components/schemas/Release"
                    },
                    "status": {
                        "type": "string"
                    },
                    "transitioned_at": {
                        "type": "string"
                    },
                    "updated_date": {
                        "type": "string"
                    }
                },
                "example": {
                    "began_at": "2019-05-21T22:19:57.762973+00:00",
                    "created_date": "2019-05-21T22:19:57.762973+00:00",
                    "device": {
                        "device_serial": "ABCD1234",
                        "hardware_version": "evt",
                        "id": 35
                    },
                    "id": 53,
                    "release": {
                        "id": 8,
                        "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                        "version": "1.0.0"
                    },
                    "status": "success",
                    "transitioned_at": "2019-05-21T22:19:57.771497+00:00",
                    "updated_date": "2019-05-21T22:19:57.778679+00:00"
                }
            },
            "RetrieveanInstall": {
                "title": "RetrieveanInstall",
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Data30"
                    }
                },
                "example": {
                    "data": {
                        "began_at": "2019-05-21T22:19:57.762973+00:00",
                        "created_date": "2019-05-21T22:19:57.762973+00:00",
                        "device": {
                            "device_serial": "ABCD1234",
                            "hardware_version": "evt",
                            "id": 35
                        },
                        "id": 53,
                        "release": {
                            "id": 8,
                            "revision": "1afd487207fe4a12aa4f77e1ecf1b978cc62d0b3",
                            "version": "1.0.0"
                        },
                        "status": "success",
                        "transitioned_at": "2019-05-21T22:19:57.771497+00:00",
                        "updated_date": "2019-05-21T22:19:57.778679+00:00"
                    }
                }
            }
        },
        "securitySchemes": {
            "httpBasic": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "httpBasic": []
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Routes handling Authentication with the Memfault service\n\nA **User** has a registered account on Memfault. A **User** is a member of different **Organizations**,\nwhich grant them permission to **Organization's** **Projects**.\n\n### Schema\n\n```\n{\n  \"id\": 1,\n  \"created_at\": \"2019-01-19T05:01:13.000000+00:00\",\n  \"updated_at\": \"2019-01-19T05:01:13.000000+00:00\",\n  \"email\": \"user@example.com\"\n}\n```"
        },
        {
            "name": "Projects",
            "description": "A **Project** is the next largest construct after **Organization**. It contains **Devices**, **Releases**, **Events**, **Issues**, **Deployments**, etc.\n\n\n### Route Parameters\n\n> The **Project** `slug` should be used whenever referencing a **Project** in an API or URL.\n\n\n### Request Schema\n\n| Field                   | Type     | Description                                                     |\n|:------------------------|:---------|:----------------------------------------------------------------|\n| `name` <br>**Required** | `String` | Name of the **Project** <br>Example: `\"Awesome Project\"`        |\n| `slug` <br>**Required** | `String` | A *unique* URL compatible slug <br>Example: `\"awesome-project\"` |\n| `platform`              | `String` | The platform of the **Project** <br>Example: `nRF5x`            |\n| `os`                    | `String` | The operating system of the **Project** <br>Example: `FreeRTOS` |\n\n\n### Query Parameters\n\nThe following parameters can be used to filter **Projects**.\n\n| Query Parameter | Type       | Description                                                   |\n|:----------------|:-----------|:--------------------------------------------------------------|\n| `name`          | `String[]` | Name of the **Project** <br>Example: `\"Awesome%20Project\"`    |\n| `platform`      | `String[]` | Platform of the **Project** <br>Example: `\"nRF5x\"`            |\n| `os`            | `String[]` | Operating System of the **Project** <br>Example: `\"FreeRTOS\"` |\n\n| Sort Parameter | Type       | Description  |\n|:---------------|:-----------|:-------------|\n| `created_date` | `DateTime` | Date created |\n\n\n### Response Schema\n\n```JSON\n{\n  \"data\": {\n    \"id\": 1,\n    \"created_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"updated_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"name\": \"Awesome Project\",\n    \"slug\": \"awesome-project\",\n    \"platform\": \"nRF5x\",\n    \"os\": \"FreeRTOS\",\n    \"api_key\": \"87c2ca9d3ec148ac82034fc2724ff614\",\n    \"count_devices\": 47\n  }\n}\n```"
        },
        {
            "name": "Artifacts",
            "description": "An **Artifact** is a single file or binary for a particular *Hardware Version* that is installed onto a **Device**. A single **Release** object will contain many **Artifacts**.\n\n\n### Request Schema\n\n> NOTE: This data is passed in as `form-data`, not `JSON`\n\n| Field                               | Type     | Description                                                                                           |\n|:------------------------------------|:---------|:------------------------------------------------------------------------------------------------------|\n| `type` <br>**Required**             | `String` | Type of **Artifact**. Choices: `firmware`, `symbols`.                                                 |\n| `hardware_version` <br>**Required** | `String` | *Hardware Version* for the **Device** <br>Example: `\"hwrev1\"`                                         |\n| `build_id`                          | `Text`   | Build Unique Identifier set by the customer <br>Example: `\"8be26a9f3b9127bc898f34e05a30a9a2c706cf43\"` |\n| `filename`                          | `JSON`   | Filename of the object being uploaded <br>Example: `\"firmware_1.2.3_hwrev1.bin\"`                      |\n\n### Query Parameters\n\nThe following parameters can be used to filter **Releases**.\n\n| Query Parameter | Type        | Description                                           |\n|:----------------|:------------|:------------------------------------------------------|\n| `types`         | `String[,]` | Type of the **Artifact** <br>Example: `\"firmware\"`    |\n| `sort`          | `String`    | Sort keys (listed below) <br>Example: `-created_date` |\n\n\n### Sort Parameters\n\n| Sort Parameter | Type       | Description                 |\n|:---------------|:-----------|:----------------------------|\n| `created_date` | `DateTime` | Date the object was created |\n\n\n### Response Schema\n\n```JSON\n{\n  \"data\": {\n    \"id\": 1,\n    \"created_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"updated_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"type\": \"firmware\",\n    \"hardware_version\": \"hwrev1\",\n    \"build_id\": \"8be26a9f3b9127bc898f34e05a30a9a2c706cf43\",\n    \"filename\": \"firmware_1.2.3_hwrev1.bin\",\n    \"url\": \"<some_s3_link>\",\n    \"md5\": \"54d0fdc208dfef97243c7eadce32797b\"\n  }\n}\n```\n"
        },
        {
            "name": "Releases",
            "description": "A **Release** is a single revision or snapshot of your code that you eventually **Deploy** to a **Cohort**. A single **Release** object will contain many **Artifacts** which are binaries specific to a particular *Hardware Version*.\n\n### Route Parameters\n\n> The **Release** `version` should be used whenever referencing a **Release** in an API or URL.\n\n### Request Schema\n\n| Field                      | Type     | Description                                                                                                                    |\n|:---------------------------|:---------|:-------------------------------------------------------------------------------------------------------------------------------|\n| `version` <br>**Required** | `String` | Short Version of the **Release** <br>Example: `\"1.2.3\"`                                                                        |\n| `min_version`              | `String` | Short Version of the minimum required version to update to this **Release** <br>Example: `\"1.0.0\"`                             |\n| `revision`                 | `String` | Commit reference or hash <br>Example: `\"11d95ef20f7a048ce1da1a6891dd3e2f92c89d85\"`                                             |\n| `notes`                    | `Text`   | Client provided notes (HTML, etc) about the release. Useful for Release Notes <br>Example: `\"<ul><li>Fix bug #1234</li></ul>\"` |\n| `extra_info`               | `JSON`   | Client provided metadata about the release <br>Example: `{\"anything\": \"you_want\"}`                                             |\n\n### Query Parameters\n\nThe following parameters can be used to filter **Releases**.\n\n| Query Parameter    | Type       | Description                                                                                                            |\n|:-------------------|:-----------|:-----------------------------------------------------------------------------------------------------------------------|\n| `revision`         | `String[]` | Revision (generally commit hash) of the **Release** <br>Example: `\"11d95ef20f7a048ce1da1a6891dd3e2f92c89d85\"`          |\n| `version`          | `String[]` | Version string of the **Release** <br>Example: `1.0.0`                                                                 |\n| `hardware_version` | `String[]` | *Hardware Version* that is associated with the **Release** <br>Example: `-created_date`                                |\n| `build_id`         | `String[]` | Filter by Build Identifiers of the **Release's** **Artifacts** <br>Example: `8be26a9f3b9127bc898f34e05a30a9a2c706cf43` |\n| `sort`             | `String`   | Sort keys (listed below) <br>Example: `-created_date`                                                                  |\n\n\n### Sort Parameters\n\n| Sort Parameter | Type       | Description                 |\n|:---------------|:-----------|:----------------------------|\n| `created_date` | `DateTime` | Date the object was created |\n\n\n### Response Schema\n\n```JSON\n{\n  \"data\": {\n    \"id\": 2,\n    \"created_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"updated_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"version\": \"1.2.3\",\n    \"min_version\": \"1.0.0\",\n    \"revision\": \"11d95ef20f7a048ce1da1a6891dd3e2f92c89d85\",\n    \"notes\": \"<h1>Release Notes</h1><ul><li>Fix bug #1234</li><li>New Feature XYX</li></ul>\",\n    \"extra_info\": {\n      \"anything\": \"you_want\",\n      \"ci_system\": \"Jenkins\",\n      \"build_system\": \"GNU Make\",\n      \"build_time_s\": 384,\n    },\n    \"count_devices\": 47\n  }\n}\n```"
        },
        {
            "name": "Cohorts",
            "description": "A **Cohort** is a collection of devices that will be given a particular **Release** of the user's choosing. One will create a **Deployment** to give a particular **Release** to a **Cohort**.\n\n\n### Route Parameters\n\n> The **Cohort** `slug` should be used whenever referencing a **Cohort** in an API or URL.\n\n\n### Request Schema\n\n| Field                   | Type     | Description                                          |\n|:------------------------|:---------|:-----------------------------------------------------|\n| `name` <br>**Required** | `String` | Name of the **Cohort** <br>Example: `\"Beta Channel\"` |\n| `slug`                  | `String` | Slug of the **Cohort** <br>Example: `\"beta\"`         |\n\n\n### Query Parameters\n\nThe following parameters can be used to filter **Cohorts**.\n\n| Query Parameter | Type       | Description                                            |\n|:----------------|:-----------|:-------------------------------------------------------|\n| `name`          | `String[]` | Name of the **Cohort** <br>Example: `\"Beta%20Channel\"` |\n| `slug`          | `String[]` | Slug for the **Cohort** <br>Example: `\"beta\"`          |\n| `sort`          | `String`   | Sort keys (listed below) <br>Example: `-created_date`  |\n\n### Sort Parameters\n\n| Sort Parameter | Type       | Description                 |\n|:---------------|:-----------|:----------------------------|\n| `created_date` | `DateTime` | Date the object was created |\n\n\n### Response Schema\n\n```JSON\n{\n  \"data\": {\n    \"id\": 2,\n    \"created_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"updated_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"name\": \"Production\",\n    \"slug\": \"prod\",\n    \"deployments\": [\n      {\n        \"id\": 1,\n        \"type\": \"normal\",\n        \"status\": \"done\",\n        \"deployer\": {\n          \"id\": 1,\n          \"email\": \"user@example.com\",\n          \"name\": \"Robert S\"\n        },\n        \"release\": {\n          \"id\": 2,\n          \"version\": \"1.2.3\",\n          \"revision\": \"11d95ef20f7a048ce1da1a6891dd3e2f92c89d85\"\n        },\n      }\n    ],\n    \"count_devices\": 24,\n  }\n}\n```"
        },
        {
            "name": "Deployments",
            "description": "A **Deployment** is a publish event of a **Release** to a **Cohort**.\n\n\n### Request Schema\n\n| Field                      | Type     | Description                                                                                   |\n|:---------------------------|:---------|:----------------------------------------------------------------------------------------------|\n| `type` <br>**Required**    | `String` | `normal` or `staged_rollout` <br>Example: `\"normal\"`                                          |\n| `release` <br>**Required** | `String` | **Release** ID or Slug <br>Example: `\"1.2.3\"`                                                 |\n| `cohort` <br>**Required**  | `String` | **Cohort** ID or Slug <br>Example: `\"beta\"`                                                   |\n| `extra_info`               | `JSON`   | Extra data. Memfault won't process this data, but will store it along with the **Deployment** |\n\n\n### Query Parameters\n\nThe following parameters can be used to filter **Deployments**.\n\n| Query Parameter                      | Type       | Description                                                                 |\n|:-------------------------------------|:-----------|:----------------------------------------------------------------------------|\n| `release`                            | `String[]` | Versions of **Releases** <br>Example: `release=1.2.3&release=1.2.4`         |\n| `cohort`                             | `String[]` | Names of **Cohorts** <br>Example: `cohort=alpha&cohort=beta`                |\n| `since`                              | `DateTime` | Deployed after this date <br>Example: `\"2019-01-19T05:01:13.000000+00:00\"`  |\n| `until`                              | `DateTime` | Deployed before this date <br>Example: `\"2019-01-19T05:01:13.000000+00:00\"` |\n| `sort` <br>Default: `-deployed_date` | `String`   | Sort keys (listed below) <br>Example: `-deployed_date`                      |\n\n\n### Sort Parameters\n\n| Sort Parameter  | Type       | Description                         |\n|:----------------|:-----------|:------------------------------------|\n| `deployed_date` | `DateTime` | Date the **Deployment** was created |\n\n\n### Response Schema\n\n```JSON\n{\n  \"data\": {\n    \"id\": 1,\n    \"created_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"updated_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"deployed_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"type\": \"staged_rollout\",\n    \"status\": \"done\",\n    \"rollout_percent\": 100,\n    \"release\": {\n      \"id\": 2,\n      \"version\": \"1.2.3\",\n      \"revision\": \"11d95ef20f7a048ce1da1a6891dd3e2f92c89d85\"\n    },\n    \"cohort\": {\n      \"id\": 1,\n      \"name\": \"Beta Channel\",\n      \"slug\": \"beta\"\n    },\n    \"deployer\": {\n      \"id\": 1,\n      \"email\": \"user@example.com\",\n      \"name\": \"Robert S\"\n    },\n    \"extra_info\": {\n      \"anything\": \"you_want\",\n      \"ci_system\": \"Jenkins\"\n    }\n  }\n}\n```"
        },
        {
            "name": "Devices",
            "description": "A **Device** is a unit in the field, e.g. A smartwatch built by a company and purchased by a customer.\n\n\n### Route Parameters\n\n> The **Device** `device_serial` should be used whenever referencing a **Device** in an API or URL.\n\n\n### Request Schema\n\n| Field                               | Type     | Description                                                                                                                     |\n|:------------------------------------|:---------|:--------------------------------------------------------------------------------------------------------------------------------|\n| `device_serial` <br>**Required**    | `String` | A unique identifier for a **Device**. Usually a serial number, MAC address, etc. <br>Example: `\"ABCD1234\"`                      |\n| `owner_ref` <br>**Required**        | `String` | A unique identifier for an *Owner* of the device. Internal to the client. <br>Example: `\"awesome_employee_1234\"`                |\n| `hardware_version` <br>**Required** | `String` | *Hardware Version* for the **Device**. Different *Hardware Versions* will have different **Artifacts**. <br>Example: `\"hwrev1\"` |\n\n\n### Query Parameters\n\nThe following parameters can be used to filter **Devices**.\n\n| Query Parameter    | Type       | Description                                                                                                      |\n|:-------------------|:-----------|:-----------------------------------------------------------------------------------------------------------------|\n| `release`          | `String[]` | **Devices** reporting these **Releases** as their `last_seen_release` <br>Example: `release=1.2.3&release=1.2.4` |\n| `owner_ref`        | `String[]` | Owner UID's (provided by client) of the **Devices** <br>Example: `owner_ref=user1234&owner_ref=user5678`         |\n| `last_seen_since`  | `DateTime` | *Last Seen* timestamp is after this date <br>Example: `\"2019-01-19T05:01:13.000000+00:00\"`                       |\n| `last_seen_until`  | `DateTime` | *Last Seen* timestamp is before this date <br>Example: `\"2019-01-19T05:01:13.000000+00:00\"`                      |\n| `hardware_version` | `String[]` | Hardware Versions <br>Example: `\"hwrev1\"`                                                                        |\n| `sort`             | `String`   | Sort keys (listed below) <br>Example: `-deployed_date`                                                           |\n\n\n### Sort Parameters\n\n| Sort Parameter | Type       | Description                       |\n|:---------------|:-----------|:----------------------------------|\n| `last_seen`    | `DateTime` | Date the **Device** was last seen |\n\n\n### Response Schema\n\n```JSON\n{\n  \"data\": {\n    \"id\": 1,\n    \"created_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"updated_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"device_serial\": \"ABCD1234\",\n    \"owner_ref\": \"awesome_employee_1234\",\n    \"hardware_version\": \"hwrev1\",\n    \"last_seen\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"last_seen_release\": {\n      \"id\": 2,\n      \"version\": \"1.2.3\",\n      \"revision\": \"11d95ef20f7a048ce1da1a6891dd3e2f92c89d85\"\n    },\n    \"cohort\": {\n      \"id\": 1,\n      \"name\": \"Beta Channel\",\n      \"slug\": \"beta\"\n    }\n  }\n}\n```"
        },
        {
            "name": "Events",
            "description": "An **Event** is a message generated by a **Device**. The types include but are not limited to *Heartbeats*, *Traces*, and *Installs*.\n\n\n### Event Types\n\n| Event Type  | Description                                             |\n|:------------|:--------------------------------------------------------|\n| `heartbeat` | Contains useful hourly metrics and system vitals        |\n| `trace`     | A **Trace** event, which adheres to the structure below |\n\n### Request Schema\n\n| Event Type                          | Type       | Description                                                                                      |\n|:------------------------------------|:-----------|:-------------------------------------------------------------------------------------------------|\n| `type` <br>**Required**             | `String`   | What type of **Event** this is. One of the *Event Types* above <br>Example: `\"heartbeat.hourly\"` |\n| `release_version` <br>**Required**  | `String`   | Version of the **Release** installed on the **Device** <br>Example: `\"1.2.3\"`                    |\n| `device_serial` <br>**Required**    | `String`   | **Device** Unique Identifier (set by client) <br>Example: `ABCD1234` <br>Example: `\"ABCD1234\"`   |\n| `hardware_version` <br>**Required** | `String`   | *Hardware Version* for the **Device**. <br>Example: `\"hwrev1\"`                                   |\n| `sdk_version` <br>**Required**      | `String`   | Memfault SDK Version on the **Device** <br>Example: `\"0.1.0\"`                                    |\n| `captured_date`                     | `DateTime` | Date the device *captured* the event                                                             |\n| `event_info`                        | `JSON`     | **Event** data. Exact schema is determined by the *Event Type*                                   |\n| `extra_info`                        | `JSON`     | Extra data. Memfault won't process this data, but will store it along with the **Event**         |\n\n\n### Event Info Payloads\n\nThe following structures are the only valid objects that are allowed in the `event_info` object of an **Event**.\n\n#### Heartbeat Event\n\nA heartbeat is like the \"pulse\" of a **Device**. It reports the vitals of the system, and gives Memfault an overview of what happened in the last hour.\n\nThe key-value pairs sent in the `event_info.metrics` field are required to be in `string:number` form. These *metrics* are parsed by Memfault and shown in dashboards. These metrics can be anything...be creative!\n\nSome useful metrics to gather can include but are not limited to:\n\n- Uptime\n- Battery Percentage\n- Bluetooth Bytes Sent/Received\n- Wi-Fi Bytes Sent/Received\n- Bluetooth Time Connected\n- Heap Bytes Free/Allocated\n- Time Asleep/Awake\n- Flash Bytes Written/Read\n- CPU/MCU Utilization\n\nIt's also useful to record usage metrics of your devices. For example, if we want to record metrics for a Parking Meter, we may also want to record the number of user interactions or number of coins inserted to measure usage.\n\n| Field     | Type                    | Description                                                                                        |\n|:----------|:------------------------|:---------------------------------------------------------------------------------------------------|\n| `metrics` | `Object[string:number]` | An object of a list of metrics as key:value pairs, where the key is a string and value is a number |\n\n```JSON\n{\n  \"type\": \"heartbeat\",\n  \"release_version\": \"1.2.3\",\n  \"device_serial\": \"ABCD1234\",\n  \"hardware_version\": \"hwrev1\",\n  \"sdk_version\": \"0.4.0\",\n  \"event_info\": {\n    \"metrics\": {\n      \"battery_pct\": 77,\n      \"uptime_s\": 17663,\n      \"heap_free_b\": 1227\n    }\n  },\n  \"extra_info\": {\n    \"whatever\": \"you_want\"\n  }\n}\n```\n\n#### Trace Event\n\nAn **Event** that is generally recorded and associated with a crash, reset, or assert. This event contains a micro-amount of data about the crash, usually on a few registers and a **Trace** *Reason*. With just this information, Memfault can group these events and surface **Issues**.\n\n> This is the smallest form of **Traces**. If you are looking for more detail about a particular type of crash, such as getting a full backtrace or a coredump of the system, Memfault can do that too. Please reach out!\n\n| Field                    | Type                    | Description                                                                                     |\n|:-------------------------|:------------------------|:------------------------------------------------------------------------------------------------|\n| `reason`<br>**Required** | `Object[String:Number]` | The Trace Reason given by the **Device**<br>Example: See Table Below for all possible values    |\n| `pc`<br>**Required**     | `Number`                | Register value of the PC (Program Counter) register at time of the **Trace**<br>Example: 226689 |\n| `lr`                     | `Number`                | Register value of the LR (Link Register) register at time of the **Trace**<br>Example: 226574   |\n| `sp`                     | `Number`                | Register value of the SP (Stack Pointer) register at time of the **Trace**<br>Example: 6712     |\n\n```JSON\n{\n  \"type\": \"trace\",\n  \"release_version\": \"1.2.3\",\n  \"device_serial\": \"ABCD1234\",\n  \"hardware_version\": \"hwrev1\",\n  \"sdk_version\": \"0.4.0\",\n  \"event_info\": {\n    \"reason\": 32769,\n    \"pc\": 226689,\n    \"lr\": 226574,\n    \"sp\": 6712\n  },\n  \"extra_info\": {\n    \"whatever\": \"you_want\"\n  }\n}\n```\n\n##### Trace Reason\n\n| Reason Name   | Value  | Type               | Notes                                                                            |\n|:--------------|:-------|:-------------------|:---------------------------------------------------------------------------------|\n| UNKNOWN       | 0x0000 | Unknown            |                                                                                  |\n| USER_SHUTDOWN | 0x0001 | Normal             |                                                                                  |\n| USER_RESET    | 0x0002 | Normal             |                                                                                  |\n| FW_UPDATE     | 0x0003 | Normal             |                                                                                  |\n| LOW_POWER     | 0x0004 | Normal             |                                                                                  |\n| ERROR_MASK    | 0x8000 | Error              | Every error below is masked against this value                                   |\n| WDKWWDR       | 0x8000 | Error              | We Don't Know Why We Dangerously Rebooted <br>[wdkwwdr.com](https://wdkwwdr.com) |\n| ASSERT        | 0x8001 | Error              |                                                                                  |\n| WATCHDOG      | 0x8002 | Error              |                                                                                  |\n| BUS_FAULT     | 0x9100 | ARM: Bus Fault     |                                                                                  |\n| IBUSERR       | 0x9101 | ARM: Bus Fault     |                                                                                  |\n| PRECISERR     | 0x9102 | ARM: Bus Fault     |                                                                                  |\n| IMPRECISERR   | 0x9103 | ARM: Bus Fault     |                                                                                  |\n| UNSTKERR      | 0x9104 | ARM: Bus Fault     |                                                                                  |\n| STKERR        | 0x9105 | ARM: Bus Fault     |                                                                                  |\n| LSPERR        | 0x9106 | ARM: Bus Fault     |                                                                                  |\n| BFARVALID     | 0x9107 | ARM: Bus Fault     |                                                                                  |\n| MEM_FAULT     | 0x9200 | ARM: Memory Faults |                                                                                  |\n| IACCVIOL      | 0x9201 | ARM: Memory Faults |                                                                                  |\n| DACCVIOL      | 0x9202 | ARM: Memory Faults |                                                                                  |\n| MUNSTKERR     | 0x9203 | ARM: Memory Faults |                                                                                  |\n| MSTKERR       | 0x9204 | ARM: Memory Faults |                                                                                  |\n| MLSPERR       | 0x9205 | ARM: Memory Faults |                                                                                  |\n| MMARVALID     | 0x9206 | ARM: Memory Faults |                                                                                  |\n| USAGE_FAULT   | 0x9300 | ARM: Usage Faults  |                                                                                  |\n| UNDEFINSTR    | 0x9301 | ARM: Usage Faults  |                                                                                  |\n| INVSTATE      | 0x9302 | ARM: Usage Faults  |                                                                                  |\n| INVPC         | 0x9303 | ARM: Usage Faults  |                                                                                  |\n| NOCP          | 0x9304 | ARM: Usage Faults  |                                                                                  |\n| UNALIGNED     | 0x9305 | ARM: Usage Faults  |                                                                                  |\n| DIVBYZERO     | 0x9306 | ARM: Usage Faults  |                                                                                  |\n| HARD_FAULT    | 0x9400 | ARM: Hard Faults   |                                                                                  |\n\n\n### Query Parameters\n\nThe following parameters can be used to filter **Events**.\n\n| Query Parameter | Type       | Description                                                                                      |\n|:----------------|:-----------|:-------------------------------------------------------------------------------------------------|\n| `device`        | `String[]` | **Device** Unique Identifier (set by client) <br>Example: `ABCD1234`                             |\n| `type`          | `String[]` | Type of **Event** <br>Example: `\"heartbeat\"`                                                     |\n| `since`         | `DateTime` | Recorded after this date <br>Example: `\"2019-01-19T05:01:13.000000+00:00\"`                       |\n| `until`         | `DateTime` | Recorded before this date <br>Example: `\"2019-01-19T05:01:13.000000+00:00\"`                      |\n| `release`       | `String[]` | Versions of **Releases** <br>Example: `release=1.2.3&release=1.2.4`                              |\n| `cohort`        | `String[]` | **Events** generated by **Devices** in these **Cohorts** <br>Example: `cohort=alpha&cohort=beta` |\n| `sort`          | `String`   | Sort key (listed below) <br>Example: `-created_date`                                             |\n\n\n### Sort Parameters\n\n| Sort Parameter  | Type       | Description                                                                                     |\n|:----------------|:-----------|:------------------------------------------------------------------------------------------------|\n| `received_date` | `DateTime` | Date the **Event** was received by Memfault                                                     |\n| `captured_date` | `DateTime` | Date the **Event** was recorded on the **Device** <br>NOTE: will equal `received_date` if empty |\n\n\n### Response Schema\n\n```JSON\n{\n  \"data\": {\n    \"type\": \"heartbeat\",\n    \"device\": {\n      \"id\": 1,\n      \"device_serial\": \"ABCD1234\",\n      \"hardware_version\": \"hwrev1\"\n    },\n    \"release\": {\n      \"id\": 1,\n      \"version\": \"1.2.3\",\n      \"revision\": \"11d95ef20f7a048ce1da1a6891dd3e2f92c89d85\"\n    },\n    \"sdk_version\": \"0.4.0\",\n    \"received_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"captured_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"event_info\": {\n      \"metrics\": {\n        \"heap_free\": 43,\n        \"heap_blocks\": 712,\n        \"anything_else\": 0\n      }\n    },\n    \"user_info\": {\n      \"anything\": \"you_want\",\n      \"last_app_opened\": \"Timer\"\n    }\n  }\n}\n```"
        },
        {
            "name": "Issues",
            "description": "An **Issue** is a logical collection of *Trace* **Events**. Each *Trace* **Event** that is received from a **device** has a unique *Signature*. These *Signatures* are used to group **Events** into **Issues**.\n\n### Request Schema\n\nNo write access for **Issues** at the moment. They are automatically populated by sending **Traces** to the server.\n\n### Query Parameters\n\nThe following parameters can be used to filter **Issues**.\n\n| Query Parameter    | Type       | Description                                                                                                         |\n|:-------------------|:-----------|:--------------------------------------------------------------------------------------------------------------------|\n| `status`           | `String[]` | Status of the Issues to query for <br>Example: `status=open&status=resolved`                                        |\n| `title`            | `String`   | Search through the `title` field, using a basic search (where `*` is a wildcard) <br>Example: `*fault*`             |\n| `last_seen_since`  | `DateTime` | Last seen after this date <br>Example: `\"2019-01-19T05:01:13.000000+00:00\"`                                         |\n| `last_seen_until`  | `DateTime` | Last seen before this date <br>Example: `\"2019-01-19T05:01:13.000000+00:00\"`                                        |\n| `first_seen_since` | `DateTime` | First seen after this date <br>Example: `\"2019-01-19T05:01:13.000000+00:00\"`                                        |\n| `first_seen_until` | `DateTime` | First seen before this date <br>Example: `\"2019-01-19T05:01:13.000000+00:00\"`                                       |\n| `min_device_count` | `Number`   | Minimum device count                                                                                                |\n| `min_crash_count`  | `Number`   | Minimum crash count                                                                                                 |\n| `signature`        | `String[]` | List of signatures of the **Crash** <br>Example: `c7f929860131738beaed6dc626565ce1671d31a6e1e9fa3b90c28271e26610c9` |\n\n\n### Sort Parameters\n\n| Sort Parameter | Type       | Description                                                                                     |\n|:---------------|:-----------|:------------------------------------------------------------------------------------------------|\n| `last_seen`    | `DateTime` | Date the **Event** was received by Memfault                                                     |\n| `first_seen`   | `DateTime` | Date the **Event** was recorded on the **Device** <br>NOTE: will equal `received_date` if empty |\n| `device_count` | `Number`   | Number of unique **Devices** that have experienced this **Issue**                               |\n| `trace_count`  | `Number`   | Number of **Traces** that have been grouped with this **Issue**                                 |\n\n### Response Schema\n\n```JSON\n{\n  \"data\": {\n    \"id\": 1,\n    \"created_date\": \"2019-04-14T01:18:06.511100+00:00\",\n    \"updated_date\": \"2019-04-14T01:18:06.541363+00:00\",\n    \"status\": \"open\",\n    \"title\": \"Assert at timeout_handler_exec\",\n    \"message\": \"\",\n    \"resolution\": null,\n    \"signature\": \"c7f929860131738beaed6dc626565ce1671d31a6e1e9fa3b90c28271e26610c9\",\n    \"counts\": [\n      5,\n      12,\n      15,\n      15,\n      4,\n      7,\n      4,\n      10,\n      15,\n      10,\n      10,\n      13,\n      9,\n      15,\n      6,\n      4,\n      10,\n      3,\n      9,\n      9,\n      12,\n      15,\n      15,\n      3\n    ],\n    \"device_count\": 3,\n    \"trace_count\": 3,\n    \"distribution\": {\n      \"hardware_version\": [\n        {\n          \"count\": 13,\n          \"version\": \"qq_pvt\"\n        },\n        {\n          \"count\": 9,\n          \"version\": \"xx_evt\"\n        }\n      ],\n      \"sw_version\": [\n        {\n          \"count\": 13,\n          \"version\": \"0.9\"\n        },\n        {\n          \"count\": 7,\n          \"version\": \"1.0.0\"\n        },\n        {\n          \"count\": 9,\n          \"version\": \"1.0.1\"\n        }\n      ]\n    },\n    \"first_seen\": \"2019-04-14T01:18:04.052556+00:00\",\n    \"last_seen\": \"2019-04-14T01:18:04.055885+00:00\",\n    \"first_release\": {\n      \"id\": 2,\n      \"version\": \"1.0.0\",\n      \"revision\": \"4e57be871d1bd83d5d9592daf8e1d20c2fc66382\"\n    },\n    \"last_release\": {\n      \"id\": 2,\n      \"version\": \"1.0.0\",\n      \"revision\": \"4e57be871d1bd83d5d9592daf8e1d20c2fc66382\"\n    },\n    \"last_trace\": {\n      \"id\": 3,\n      \"created_date\": \"2019-04-14T01:18:04.055867+00:00\",\n      \"captured_date\": \"2019-04-14T01:18:04.055885+00:00\",\n      \"received_date\": \"2019-04-14T01:18:04.055881+00:00\",\n      \"title\": \"Assert at timeout_handler_exec\",\n      \"message\": \"\",\n      \"reason\": \"Assert\",\n      \"signature\": \"c7f929860131738beaed6dc626565ce1671d31a6e1e9fa3b90c28271e26610c9\",\n      \"context\": \"\",\n      \"release\": {\n        \"id\": 2,\n        \"version\": \"1.0.0\",\n        \"revision\": \"4e57be871d1bd83d5d9592daf8e1d20c2fc66382\"\n      },\n      \"device\": {\n        \"device_serial\": \"FB11014FCE12616D\",\n        \"hardware_version\": \"proto\",\n        \"id\": 43\n      },\n      \"entries\": {\n        \"faults\": {\n          \"notes\": [],\n          \"registers\": [\n            {\n              \"name\": \"CFSR\",\n              \"value\": 0\n            },\n            {\n              \"name\": \"HFSR\",\n              \"value\": 0\n            },\n            {\n              \"name\": \"SHCSR\",\n              \"value\": 0\n            }\n          ]\n        },\n        \"threads\": [\n          {\n            \"tid\": 1,\n            \"name\": \"Thread 1\",\n            \"current\": false,\n            \"crashed\": false,\n            \"reporting\": false,\n            \"registers\": [\n              {\n                \"name\": \"r0\",\n                \"value\": 537122332\n              },\n              {\n                \"name\": \"r1\",\n                \"value\": 559170130\n              },\n              {\n                \"name\": \"r2\",\n                \"value\": 3758157060\n              },\n              {\n                \"name\": \"r3\",\n                \"value\": 2147485729\n              },\n              {\n                \"name\": \"r4\",\n                \"value\": 330\n              },\n              {\n                \"name\": \"r5\",\n                \"value\": 0\n              },\n              {\n                \"name\": \"r6\",\n                \"value\": 536895384\n              },\n              {\n                \"name\": \"r7\",\n                \"value\": 0\n              },\n              {\n                \"name\": \"r8\",\n                \"value\": 537122568\n              },\n              {\n                \"name\": \"r9\",\n                \"value\": 0\n              },\n              {\n                \"name\": \"r10\",\n                \"value\": 573785173\n              },\n              {\n                \"name\": \"r11\",\n                \"value\": 17\n              },\n              {\n                \"name\": \"r12\",\n                \"value\": 0\n              },\n              {\n                \"name\": \"sp\",\n                \"value\": 537122328\n              },\n              {\n                \"name\": \"lr\",\n                \"value\": 226689\n              },\n              {\n                \"name\": \"pc\",\n                \"value\": 226574\n              },\n              {\n                \"name\": \"cpsr\",\n                \"value\": 16777249\n              }\n            ],\n            \"stacktrace\": [\n              {\n                \"address\": 226574,\n                \"arguments\": {\n                  \"lr\": \"<optimized out>\",\n                  \"pc\": \"<optimized out>\",\n                  \"extra\": \"<optimized out>\"\n                },\n                \"context\": [],\n                \"file\": \"/Users/chrisc/dev/memfault/sdk/embedded/src/memfault_fault_handling.c\",\n                \"frame_size\": 24,\n                \"frame_type\": \"normal\",\n                \"function\": \"memfault_reboot_tracking_assert_handler\",\n                \"index\": 0,\n                \"lineno\": 171,\n                \"locals\": {\n                  \"info\": \"{\\n  reason = kMfltRebootReason_Assert, \\n  pc = 159568, \\n  lr = 180385\\n}\"\n                }\n              },\n              {\n                \"address\": 180384,\n                \"arguments\": {\n                  \"p_timer\": \"<optimized out>\"\n                },\n                \"context\": [],\n                \"file\": \"../nrf5_sdk/components/libraries/timer/app_timer.c\",\n                \"frame_size\": 0,\n                \"frame_type\": \"inline\",\n                \"function\": \"timeout_handler_exec\",\n                \"index\": 1,\n                \"lineno\": 440,\n                \"locals\": {\n                  \"p_timer\": \"<optimized out>\"\n                }\n              },\n              {\n                \"address\": 180384,\n                \"arguments\": null,\n                \"context\": [],\n                \"file\": \"../nrf5_sdk/components/libraries/timer/app_timer.c\",\n                \"frame_size\": 0,\n                \"frame_type\": \"inline\",\n                \"function\": \"timer_timeouts_check\",\n                \"index\": 2,\n                \"lineno\": 440,\n                \"locals\": {\n                  \"p_previous_timer\": \"<optimized out>\",\n                  \"p_timer\": \"0x20005f98 <m_mflt_metric_log_timer_data>\",\n                  \"ticks_elapsed\": \"0\",\n                  \"ticks_expired\": \"330\"\n                }\n              },\n              {\n                \"address\": 180384,\n                \"arguments\": null,\n                \"context\": [],\n                \"file\": \"../nrf5_sdk/components/libraries/timer/app_timer.c\",\n                \"frame_size\": 24,\n                \"frame_type\": \"normal\",\n                \"function\": \"RTC1_IRQHandler\",\n                \"index\": 3,\n                \"lineno\": 917,\n                \"locals\": null\n              },\n              {\n                \"address\": 4294967273,\n                \"arguments\": null,\n                \"context\": [],\n                \"file\": null,\n                \"frame_size\": 32,\n                \"frame_type\": \"sigtramp\",\n                \"function\": \"<signal handler called>\",\n                \"index\": 4,\n                \"lineno\": null,\n                \"locals\": null\n              },\n              {\n                \"address\": 89946,\n                \"arguments\": null,\n                \"context\": [],\n                \"file\": null,\n                \"frame_size\": 0,\n                \"frame_type\": \"normal\",\n                \"function\": null,\n                \"index\": 5,\n                \"lineno\": null,\n                \"locals\": null\n              },\n              {\n                \"address\": 89944,\n                \"arguments\": null,\n                \"context\": [],\n                \"file\": null,\n                \"frame_type\": \"normal\",\n                \"function\": null,\n                \"index\": 6,\n                \"lineno\": null,\n                \"locals\": null\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```"
        },
        {
            "name": "Installs",
            "description": "An **Install** is an attempt (successful, in progress, or failure) by a **Device** to update to a new **Release** by way of downloading and installing an **Artifact**.\n\nThese are generated from the **Events** sent from the **Device**, and are *read-only*.\n\n\n### Request Schema\n\n*Read Only*\n\n\n### Query Parameters\n\nThe following parameters can be used to filter **Installs**.\n\n| Query Parameter | Type       | Description                                                         |\n|:----------------|:-----------|:--------------------------------------------------------------------|\n| `release`       | `String[]` | Versions of **Releases** <br>Example: `release=1.2.3&release=1.2.4` |\n| `device`        | `String[]` | **Device** UIDs of **Devices** <br>Example: `ABCD1234`              |\n| `status`        | `String[]` | Status of the **Install** <br>Example: `success`                    |\n| `sort`          | `String`   | Sort keys (listed below) <br>Example: `-began_at`                   |\n\n\n### Sort Parameters\n\n| Sort Parameter    | Type       | Description                                 |\n|:------------------|:-----------|:--------------------------------------------|\n| `began_at`        | `DateTime` | Date the **Install** was started at         |\n| `transitioned_at` | `DateTime` | Date the **Install** last changed states at |\n\n\n### Response Schema\n\n```JSON\n{\n  \"data\": {\n    \"id\": 1,\n    \"created_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"updated_date\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"started_at\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"transitioned_at\": \"2019-01-19T05:01:13.000000+00:00\",\n    \"status\": \"success\",\n    \"device\": {\n      \"id\": 1,\n      \"device_serial\": \"ABCD1234\",\n      \"hardware_version\": \"hwrev1\",\n      \"last_seen\": \"2019-01-19T05:01:13.000000+00:00\",\n    },\n    \"release_to\": {\n      \"id\": 2,\n      \"version\": \"1.2.3\",\n      \"revision\": \"11d95ef20f7a048ce1da1a6891dd3e2f92c89d85\"\n    },\n    \"release_from\": {\n      \"id\": 1,\n      \"version\": \"1.2.2\",\n      \"revision\": \"bd0bfa48e91d1366cfad7ec2c408016c487ee5e4\"\n    }\n  }\n}\n```"
        },
        {
            "name": "Upload",
            "description": "The Upload endpoint is used to upload files from a **Device** or another API to the Memfault service. "
        },
        {
            "name": "Tasks",
            "description": "For long running jobs, Memfault will issue it as a background *Task* and give back a `202 Accepted` response with a `Location` header."
        }
    ]
}
